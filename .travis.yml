dist: trusty
sudo: required

language: node_js
node_js: '8'

services:
   - docker

addons:
   apt:
      sources:
         - google-chrome
      packages:
         - google-chrome-stable
         - docker-ce

before_install:
   - export DISPLAY=:99.0 # Configuration for e2e tests
   - npm install -g npm@latest # Update npm
   - npm install -g greenkeeper-lockfile # Connection with Greenkeeper
install:
   - case $TRAVIS_BRANCH in greenkeeper*) npm install;; *) npm ci;; esac; # Greenkeeper branches should use npm install, otherwise npm ci
before_script: greenkeeper-lockfile-update # Connection with Greenkeeper
after_script: greenkeeper-lockfile-upload # Connection with Greenkeeper

cache:
   directories:
      - - '$HOME/.npm'

stages:
   - test
   - deploy
   - release
   - documentation

jobs:
   include:
      - stage: test # Unit tests
        env: TEST=Unit tests
        before_script:
           - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter ## Code Climate coverage script
           - chmod +x ./cc-test-reporter
           - ./cc-test-reporter before-build ## Code Climate hook
        script:
           - npm run lint
           - npm run test:ci
           - npm run test:doc
        after_script:
           - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT ## Code Climate hook
           - cat ./docs/coverage/lcov.info | codacy-coverage ## Codacy coverage

      - stage: test # Integration tests
        env: TEST=e2e tests
        script:
           - npm run build
           - npm run server &>/dev/null &
           - npm run e2e:update-webdriver
           - xvfb-run -a npm run e2e

      - stage: test # Docker build
        env: TEST=Docker
        script:
           - docker build -t $DOCKER_APP .
           - docker run -d -p 5000:5000 -e PORT=5000 $DOCKER_APP
           - docker ps -a
           - npm run e2e:update-webdriver
           - xvfb-run -a npm run e2e

      - stage: deploy # Deploy to DEV environment
        env: URL=https://samuel-fernandez-dev.herokuapp.com/ # Here we need to make it explicit
        if: type = push AND (NOT branch = master) # Deploy only run for PUSH, but avoid master
        script: skip # Default script is npm test, which we want to skip
        deploy:
           provider: heroku
           app: $HEROKU_APP_DEV # This deployment is only for PR
           api_key:
              - $HEROKU_TOKEN # Generated running heroku authorizations:create
           on:
              all_branches: true
        after_deploy:
           - curl $URL > /dev/null # Start Heroku server by accessing it
           - npm run e2e:update-webdriver
           - xvfb-run -a npm run e2e:remote || travis_terminate 1 # Force build failure if tests fail
           - npm run pagespeed -- --github || travis_terminate 1 # Force build failure if audit fails
           - npm run lighthouse -- --github || travis_terminate 1 # Force build failure if audit fails

      - stage: release # Release to PRD environment
        env: URL=https://samuel-fernandez.herokuapp.com/ # Here we need to make it explicit
        if: (NOT type = pull_request) AND branch = master
        script: skip # Default script is npm test, which we want to skip
        deploy:
           - provider: heroku
             app: $HEROKU_APP_PRD # This deployment is the release
             api_key:
                - $HEROKU_TOKEN # Generated running heroku authorizations:create
           - provider: script
             skip_cleanup: true
             script:
                - npx semantic-release
        after_deploy:
           - curl $URL > /dev/null # Start Heroku server by accessing it
           - npm run e2e:update-webdriver
           - xvfb-run -a npm run e2e:remote || travis_terminate 1 # Force build failure if tests fail
           - npm run pagespeed || travis_terminate 1 # Force build failure if audit fails
           - npm run lighthouse || travis_terminate 1 # Force build failure if audit fails

      - stage: documentation # Generate documentation after release
        env: URL=https://samuel-fernandez.herokuapp.com/ # Here we need to make it explicit
        if: (NOT type = pull_request) AND branch = master # Only for for master build
        script:
           - npm run test:ci # Generate report from unit tests at /docs/coverage
           - curl $URL > /dev/null # Start Heroku server by accessing it
           - npm run e2e:update-webdriver
           - xvfb-run -a npm run e2e:remote # Generate report from e2e tests at /docs/cucumber
           - npm run compodoc # Generate report from documentation at /docs/compodoc
           - npm run pagespeed # Generate report from pagespeed at /docs/pagespeed
           - npm run lighthouse # Generate report from lighthouse at /docs/lighthouse
           - cp -R img docs/ # Copy src imgs to /docs/img
        deploy:
           - provider: pages
             skip_cleanup: true
             github_token: $GH_TOKEN
             target_branch: gh-pages
             local_dir: docs
