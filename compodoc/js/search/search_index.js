var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.565,1,1.816]],["body/modules/AppModule.html",[0,0.564,1,3.539,2,0.889,3,1.251,4,0.968,5,1.494,6,2.315,7,1.365,8,1.778,9,2.626,10,2.626,11,2.626,12,2.626,13,3.257,14,0.033,15,2.858,16,3.539,17,1.937,18,2.036,19,1.494,20,1.365,21,0.318,22,0.318,23,0.275,24,3.152,25,1.564,26,0.766,27,1.564,28,0.564,29,3.152,30,4.294,31,1.642,32,1.365,33,3.152,34,2.626,35,2.626,36,2.626,37,3.152,38,2.626,39,3.152,40,3.152,41,1.494,42,2.279,43,1.251,44,3.152,45,3.152,46,3.152,47,2.626,48,2.279,49,3.152,50,2.021,51,3.152,52,3.152,53,3.152,54,2.626,55,3.152,56,3.152,57,0.318,58,0.363,59,1.365,60,0.016,61,0.022,62,0.016]],["title/modules/AppRoutingModule.html",[0,0.565,13,1.816]],["body/modules/AppRoutingModule.html",[2,1.113,8,1.437,13,2.863,14,0.034,21,0.398,22,0.398,23,0.344,25,1.437,26,0.646,27,1.812,28,0.706,54,3.286,57,0.398,58,0.454,60,0.02,61,0.026,62,0.02,63,3.945,64,2.853,65,3.189,66,3.493,67,2.27,68,1.709,69,3.136,70,4.975,71,3.945,72,1.709,73,3.945,74,3.945,75,3.945,76,3.945,77,3.945,78,3.945,79,3.945,80,3.945,81,3.945,82,3.945,83,3.945]],["title/modules/AppServerModule.html",[0,0.565,84,2.023]],["body/modules/AppServerModule.html",[0,0.624,1,3.353,2,0.982,3,1.383,4,1.07,5,1.652,6,2.435,7,1.509,8,1.269,14,0.033,17,1.987,18,2.177,19,1.652,20,1.509,21,0.351,22,0.351,23,0.304,25,1.672,26,0.737,27,1.672,28,0.624,31,1.815,41,1.652,43,1.822,57,0.351,58,0.401,60,0.018,61,0.024,62,0.018,66,2.943,68,1.509,69,2.005,84,3.808,85,2.902,86,3.484,87,3.484,88,3.484,89,4.592,90,4.592,91,1.815,92,4.592,93,2.902,94,2.519,95,2.902,96,2.902,97,3.484,98,3.484,99,4.592,100,3.484,101,3.484,102,3.484,103,3.484,104,3.484,105,3.484,106,3.484,107,0.901,108,1.269]],["title/interfaces/GraphQlConfig.html",[109,1.253,110,1.816]],["body/interfaces/GraphQlConfig.html",[0,0.631,14,0.033,21,0.356,22,0.356,23,0.308,32,2.004,48,4.462,50,3.747,57,0.356,60,0.018,61,0.024,62,0.018,109,1.399,110,2.663,111,2.028,112,2.937,113,0.912,114,2.937,115,1.881,116,0.912,117,1.836,118,1.547,119,2.32,120,1.096,121,4.569,122,2.41,123,2.194,124,3.747,125,4.627,126,5.485,127,4.627,128,2.41,129,4.569,130,4.627,131,4.627,132,3.855,133,3.855,134,4.627,135,4.627,136,4.627,137,3.855]],["title/interfaces/GraphQlEntity.html",[109,1.253,138,1.816]],["body/interfaces/GraphQlEntity.html",[14,0.033,21,0.337,22,0.337,23,0.291,26,0.434,57,0.337,60,0.03,61,0.023,62,0.017,109,1.324,111,1.921,113,0.863,115,1.831,116,0.863,117,1.771,118,1.795,119,2.284,120,1.271,123,2.545,138,2.568,139,2.78,140,3.718,141,4.472,142,4.472,143,4.472,144,4.472,145,3.441,146,5.368,147,2.796,148,4.319,149,3.227,150,2.116,151,2.545,152,4.463,153,4.463,154,2.893,155,2.568]],["title/modules/GraphQlModule.html",[0,0.565,15,1.644]],["body/modules/GraphQlModule.html",[2,1.009,7,2.024,14,0.034,15,2.71,21,0.361,22,0.361,23,0.312,25,1.303,26,0.763,27,1.895,28,0.641,57,0.361,58,0.412,60,0.018,61,0.024,62,0.018,110,3.174,118,1.196,120,0.848,128,1.864,150,1.696,156,3.578,157,1.864,158,4.673,159,3.578,160,4.673,161,1.303,162,3.578,163,1.55,164,1.009,165,3.379,166,1.696,167,5.203,168,2.995,169,1.864,170,4.673,171,2.981,172,3.893,173,2.689,174,2.059,175,2.059,176,2.059,177,3.335,178,3.379,179,3.893,180,3.578,181,2.981,182,3.578]],["title/injectables/GraphQlService.html",[183,1.644,184,2.023]],["body/injectables/GraphQlService.html",[14,0.034,21,0.145,22,0.145,23,0.125,26,0.62,28,0.256,31,0.746,32,0.621,50,1.514,57,0.145,58,0.165,59,1.023,60,0.018,61,0.012,62,0.007,68,1.994,91,0.746,94,1.036,110,2.396,113,0.371,115,1.098,116,0.371,117,0.937,118,1.473,119,2.255,120,1.164,121,3.469,122,1.23,123,1.12,128,2.015,133,1.968,137,3.469,138,2.227,140,1.968,147,2.848,148,2.529,149,1.708,150,2.182,151,1.12,154,1.359,155,2.396,157,1.23,161,1.516,163,1.994,164,1.091,165,2.18,166,2.33,171,1.193,173,2.227,174,1.735,175,0.824,176,0.824,177,0.918,183,1.23,184,2.242,185,1.036,186,1.193,187,2.362,188,3.497,189,2.362,190,2.362,191,2.362,192,3.015,193,3.015,194,2.396,195,2.362,196,1.432,197,3.869,198,2.914,199,3.869,200,3.45,201,2.362,202,1.12,203,1.12,204,3.497,205,2.362,206,1.432,207,2.362,208,2.362,209,2.362,210,3.497,211,2.362,212,2.362,213,2.362,214,2.362,215,2.362,216,3.554,217,2.362,218,1.432,219,2.362,220,2.362,221,2.362,222,2.828,223,3.835,224,1.432,225,2.362,226,1.359,227,1.735,228,2.362,229,1.432,230,2.362,231,1.193,232,1.432,233,1.432,234,2.362,235,0.918,236,1.432,237,1.432,238,1.432,239,1.036,240,1.432,241,1.432,242,1.432,243,2.899,244,1.432,245,1.432,246,1.432,247,1.432,248,1.432,249,1.432,250,1.432,251,1.432,252,1.432,253,1.196,254,2.362,255,1.432,256,1.193,257,1.968,258,2.362,259,1.036,260,1.036,261,1.432,262,1.432,263,1.193,264,1.193,265,1.432,266,1.432,267,1.432,268,1.432,269,1.193,270,1.432,271,1.432,272,1.432,273,1.432,274,1.432,275,1.432,276,1.432,277,1.432,278,1.432,279,1.432,280,1.432,281,1.432,282,1.036,283,1.432,284,0.918,285,1.432,286,1.514,287,1.432,288,1.432,289,1.432,290,1.432,291,2.362,292,1.432,293,1.432,294,1.432,295,1.432,296,1.432,297,1.432,298,1.432,299,3.497,300,1.432,301,2.362,302,1.432,303,1.432,304,1.432,305,1.432,306,1.432]],["title/interfaces/GraphQlTestRequest.html",[109,1.253,307,2.023]],["body/interfaces/GraphQlTestRequest.html",[14,0.034,21,0.355,22,0.355,23,0.307,26,0.457,57,0.355,60,0.018,61,0.024,62,0.018,109,1.833,111,2.022,113,0.909,115,1.878,116,0.909,117,1.833,118,1.832,120,1.222,122,2.405,145,3.744,154,2.658,155,2.022,253,1.395,282,3.34,284,3.512,286,3.872,307,3.306,308,2.928,309,2.928,310,2.928,311,3.962,312,5.841,313,4.618,314,3.847,315,5.841,316,2.542,317,2.968]],["title/injectables/GraphQlTestingController.html",[183,1.644,318,1.644]],["body/injectables/GraphQlTestingController.html",[14,0.034,21,0.204,22,0.204,23,0.176,26,0.597,28,0.362,57,0.204,58,0.232,59,0.875,60,0.01,61,0.016,62,0.01,68,0.875,113,0.522,115,0.736,116,0.522,118,1.266,119,2.068,120,1.087,122,1.619,123,1.795,147,2.936,150,2.394,154,2.179,155,2.447,157,1.619,161,1.548,163,1.989,164,1.068,166,2.176,176,1.162,183,1.619,185,1.461,194,1.162,202,1.473,203,1.473,222,3.196,223,4.342,243,2.789,253,1.233,256,1.683,259,1.461,284,1.295,286,2.726,307,3.237,311,2.247,316,2.739,317,1.162,318,2.215,319,3.824,320,1.683,321,3.107,322,3.107,323,2.247,324,3.107,325,3.107,326,3.107,327,3.542,328,3.107,329,3.107,330,4.848,331,2.02,332,4.59,333,4.252,334,2.642,335,2.02,336,3.787,337,3.107,338,2.02,339,4.252,340,4.252,341,4.252,342,3.542,343,3.075,344,3.107,345,3.107,346,2.02,347,2.02,348,3.107,349,2.589,350,1.683,351,1.683,352,1.683,353,2.02,354,2.02,355,2.02,356,5.876,357,2.02,358,2.02,359,2.02,360,2.02,361,2.02,362,2.02,363,2.02,364,2.02,365,2.02,366,2.02,367,2.02,368,2.02]],["title/modules/GraphQlTestingModule.html",[0,0.565,369,2.023]],["body/modules/GraphQlTestingModule.html",[0,0.898,2,0.936,3,1.317,4,1.019,5,1.573,6,1.573,7,2.32,8,1.209,14,0.034,15,2.908,18,2.108,19,1.573,20,1.438,21,0.335,22,0.335,23,0.29,25,1.619,26,0.747,27,1.619,28,0.594,31,1.729,32,1.438,47,2.765,48,2.4,50,2.127,57,0.335,58,0.382,60,0.017,61,0.023,62,0.017,113,0.858,115,1.826,128,1.729,151,1.573,173,2.558,174,1.91,175,1.91,179,4.177,181,2.765,200,3.215,318,2.993,334,3.082,350,2.765,351,3.704,369,3.824,370,2.765,371,3.319,372,2.765,373,3.319,374,3.319,375,4.446,376,3.319,377,2.85,378,3.319,379,3.319,380,3.319]],["title/components/HomeComponent.html",[107,0.817,381,1.149]],["body/components/HomeComponent.html",[4,1.037,14,0.033,17,1.129,21,0.341,22,0.341,23,0.295,26,0.439,28,0.604,41,2.795,43,1.339,57,0.341,58,0.388,59,2.19,60,0.017,61,0.023,62,0.017,72,1.462,107,1.453,108,1.229,113,0.873,161,1.229,164,1.268,202,2.132,203,2.132,253,1.339,381,2.103,382,2.342,383,2.812,384,1.942,385,1.942,386,2.812,387,4.492,388,1.758,389,2.882,390,2.882,391,3.392,392,3.746,393,5.056,394,3.251,395,4.496,396,3.375,397,2.164,398,2.812,399,3.375,400,2.587,401,2.587,402,1.942,403,3.103,404,1.942,405,1.942,406,1.942,407,1.942,408,1.339,409,1.462,410,1.942,411,1.229,412,1.942,413,1.942]],["title/modules/HomeModule.html",[0,0.565,414,2.023]],["body/modules/HomeModule.html",[0,0.697,2,1.098,3,1.545,4,1.196,5,2.568,6,1.846,7,1.687,8,1.418,14,0.033,18,2.339,19,1.846,20,1.687,21,0.393,22,0.393,23,0.34,25,1.797,26,0.74,27,1.797,28,0.697,42,2.815,57,0.393,58,0.448,60,0.02,61,0.025,62,0.02,168,3.163,169,2.028,381,2.186,387,3.244,414,3.955,415,3.244,416,3.244,417,3.244,418,3.454,419,3.893,420,3.244]],["title/modules/HomeRoutingModule.html",[0,0.565,418,1.816]],["body/modules/HomeRoutingModule.html",[2,1.196,8,1.544,14,0.033,21,0.428,22,0.428,23,0.37,25,1.544,26,0.732,27,1.895,28,0.759,57,0.428,58,0.488,60,0.022,61,0.027,62,0.022,64,3.066,65,3.335,66,3.608,67,2.44,68,1.837,69,2.44,107,1.097,381,1.895,418,2.994,420,3.532,421,4.24,422,3.532]],["title/components/ShellComponent.html",[17,1.056,107,0.817]],["body/components/ShellComponent.html",[4,0.668,14,0.033,17,1.669,21,0.219,22,0.219,23,0.19,26,0.616,28,0.389,41,2.589,43,1.883,57,0.219,58,0.25,59,0.942,60,0.011,61,0.017,62,0.011,72,1.717,107,1.227,108,0.792,113,0.562,116,0.562,117,1.305,118,0.727,119,0.863,120,0.939,148,1.573,161,1.197,163,0.942,164,1.118,169,1.133,172,1.812,194,1.892,202,1.559,203,1.559,226,1.251,227,1.251,231,1.812,253,0.863,381,0.792,382,1.712,383,1.812,384,1.251,385,1.251,388,1.133,389,2.107,390,2.107,391,2.981,392,2.739,394,2.377,397,1.394,398,3.68,400,1.892,401,1.892,402,1.251,403,2.542,404,1.251,405,1.251,406,1.251,407,1.251,408,0.863,409,0.942,410,1.251,411,0.792,412,1.251,413,1.251,423,1.812,424,2.377,425,2.739,426,3.963,427,3.287,428,4.744,429,2.175,430,3.963,431,4.418,432,3.287,433,2.739,434,3.68,435,2.175,436,2.175,437,2.175,438,2.175,439,2.175,440,2.175,441,2.175,442,2.175,443,4.744,444,4.418,445,4.744,446,3.287,447,3.287,448,2.175,449,3.287,450,2.175,451,2.175,452,3.287,453,2.175,454,2.175,455,2.175,456,2.175,457,3.287,458,2.175,459,2.175,460,2.175,461,2.175,462,3.963,463,2.175,464,2.175,465,5.335,466,2.175,467,2.175,468,2.175,469,3.287,470,3.287,471,3.287,472,3.963,473,3.963,474,3.287,475,3.287,476,3.287,477,3.287,478,3.287,479,3.963,480,2.175,481,1.812,482,2.175,483,2.175,484,2.175,485,2.175,486,2.175,487,2.175,488,2.175,489,2.175,490,2.175,491,2.175,492,2.175,493,2.175,494,3.287,495,3.287,496,2.175,497,2.175,498,3.287,499,2.175,500,2.175]],["title/components/ShellLoadingComponent.html",[107,0.817,108,1.149]],["body/components/ShellLoadingComponent.html",[4,1.031,14,0.033,17,1.122,21,0.339,22,0.339,23,0.293,26,0.436,28,0.601,41,2.791,43,2.336,57,0.339,58,0.386,59,2.184,60,0.017,61,0.023,62,0.017,72,1.454,107,1.304,108,2.1,113,0.868,161,1.222,164,1.263,202,2.124,203,2.124,253,1.332,381,1.222,382,2.333,384,1.931,385,1.931,388,1.748,389,2.871,390,2.871,391,3.387,394,3.239,397,2.151,400,2.578,401,2.578,402,1.931,403,3.096,404,1.931,405,1.931,406,1.931,407,1.931,408,1.332,409,1.454,410,1.931,411,1.222,412,1.931,413,1.931,425,3.732,501,3.732,502,3.239,503,2.796,504,5.38,505,4.479,506,4.479,507,3.356]],["title/modules/ShellModule.html",[0,0.565,16,1.816]],["body/modules/ShellModule.html",[0,0.643,2,1.012,3,1.424,4,1.102,5,2.47,6,1.701,7,2.028,8,1.897,14,0.033,16,3.562,17,2.098,18,2.22,19,1.701,20,1.555,21,0.362,22,0.362,23,0.313,25,1.307,26,0.744,27,1.705,28,0.643,43,1.424,57,0.362,58,0.413,60,0.018,61,0.024,62,0.018,65,3.001,67,2.065,108,2.285,168,3.001,169,1.869,502,2.595,508,2.99,509,2.99,510,2.99,511,3.589,512,3.589,513,3.589]],["title/classes/SubscriptionTestingClient.html",[58,0.363,334,1.816]],["body/classes/SubscriptionTestingClient.html",[14,0.034,21,0.169,22,0.169,23,0.146,26,0.436,57,0.169,58,0.193,60,0.009,61,0.014,62,0.009,68,1.661,113,0.433,115,0.61,116,0.433,117,1.064,118,1.573,119,2.336,120,1.225,122,2.95,124,2.458,128,0.872,129,2.234,147,2.884,149,2.773,150,1.271,151,1.271,154,2.415,157,1.396,161,1.779,163,2.037,164,1.326,166,2.504,173,1.93,174,0.963,175,0.963,194,3.095,198,2.794,216,2.773,222,1.543,226,0.963,227,0.963,235,1.073,243,2.975,257,3.195,259,1.21,260,3.739,284,1.719,286,3.447,311,1.939,316,3.238,317,2.415,318,1.396,323,1.939,327,3.496,334,1.543,342,2.234,343,2.773,349,2.234,424,1.939,514,1.21,515,4.199,516,1.394,517,2.681,518,2.681,519,2.794,520,1.394,521,2.681,522,2.681,523,3.354,524,1.394,525,1.674,526,2.681,527,2.681,528,3.835,529,1.674,530,2.681,531,3.354,532,2.681,533,5.886,534,1.674,535,2.681,536,4.887,537,2.681,538,1.674,539,3.835,540,3.835,541,2.681,542,1.674,543,2.681,544,1.674,545,2.681,546,1.674,547,1.674,548,2.681,549,2.681,550,1.674,551,2.681,552,3.195,553,3.354,554,1.674,555,1.674,556,3.835,557,1.674,558,1.674,559,3.354,560,3.354,561,1.674,562,1.674,563,1.674]],["title/classes/TransferStateMock.html",[58,0.363,377,2.023]],["body/classes/TransferStateMock.html",[14,0.034,21,0.195,22,0.195,23,0.168,26,0.251,31,1.004,32,0.835,57,0.195,58,0.423,60,0.01,61,0.015,62,0.01,113,0.499,116,0.499,117,1.19,118,1.503,119,1.783,120,1.338,145,1.236,150,1.744,155,3.496,157,1.562,161,1.808,163,2.335,164,1.267,166,2.5,194,2.117,200,3.44,226,1.11,227,3.208,243,2.954,253,1.783,260,4.133,269,4.707,317,2.857,323,2.168,343,3.44,377,2.358,424,2.168,514,1.394,520,1.606,524,1.606,564,4.277,565,1.606,566,2.998,567,3.678,568,2.998,569,4.149,570,2.998,571,2.998,572,4.757,573,1.928,574,5.39,575,2.998,576,6.019,577,4.494,578,1.928,579,2.998,580,1.928,581,2.998,582,2.998,583,3.678,584,2.998,585,4.149,586,1.928,587,4.149,588,2.998,589,1.928,590,2.998,591,2.998,592,1.928,593,2.998,594,1.928,595,4.149,596,1.928,597,1.928]],["title/interfaces/User.html",[109,1.253,409,1.367]],["body/interfaces/User.html",[14,0.033,21,0.388,22,0.388,23,0.335,57,0.388,60,0.02,61,0.025,62,0.02,109,1.525,111,2.212,113,0.994,116,0.994,117,1.942,119,2.514,120,1.417,164,1.687,409,2.332,598,3.202,599,3.843,600,4.326,601,4.326,602,4.984]],["title/components/UserListComponent.html",[107,0.817,408,1.253]],["body/components/UserListComponent.html",[4,0.931,14,0.033,17,1.014,21,0.306,22,0.306,23,0.265,26,0.543,28,0.543,41,2.718,43,1.203,57,0.306,58,0.349,59,2.073,60,0.016,61,0.022,62,0.016,72,2.568,107,1.4,108,1.104,113,0.784,116,0.784,120,0.99,161,1.522,164,1.179,176,1.745,202,1.982,203,1.982,253,1.659,381,1.104,382,2.178,384,1.745,385,1.745,388,1.579,389,2.68,390,2.68,391,3.299,397,1.943,400,2.406,401,2.406,402,1.745,403,2.968,404,1.745,405,1.745,406,1.745,407,1.745,408,2.22,409,2.483,410,1.745,411,1.104,412,1.745,413,1.745,481,4.661,602,3.483,603,3.987,604,3.461,605,2.526,606,4.181,607,4.786,608,4.181,609,4.181,610,4.181]],["title/components/UsersComponent.html",[107,0.817,411,1.149]],["body/components/UsersComponent.html",[4,0.755,14,0.034,17,0.822,21,0.248,22,0.248,23,0.214,26,0.61,28,0.44,36,2.047,41,2.556,43,0.975,57,0.43,58,0.283,59,1.064,60,0.013,61,0.019,62,0.013,68,1.846,72,2.594,107,1.292,108,0.895,113,0.636,115,1.708,116,0.636,117,1.429,118,0.822,120,1.009,123,1.707,138,2.072,141,2.047,142,2.047,143,2.047,144,2.047,147,1.875,151,1.165,157,1.875,161,1.552,163,1.064,164,1.408,166,1.165,176,1.414,184,3.007,202,1.707,203,1.707,216,3.774,235,1.575,243,1.414,253,1.429,282,2.603,317,2.072,352,2.047,381,0.895,382,1.875,384,1.414,385,1.414,388,1.28,391,3.103,400,2.072,401,2.072,402,1.414,403,2.7,404,1.414,405,1.414,406,1.414,407,1.414,408,0.975,409,1.56,410,1.414,411,1.9,412,1.414,413,1.414,519,2.999,600,2.603,601,2.603,611,1.777,612,3.6,613,4.261,614,4.692,615,2.457,616,3.6,617,2.457,618,3.6,619,3.6,620,3.6,621,3.6,622,2.047,623,2.603,624,2.603,625,2.047,626,2.457,627,2.457,628,2.457,629,2.457,630,2.457,631,2.457]],["title/modules/UsersModule.html",[0,0.565,632,2.023]],["body/modules/UsersModule.html",[0,0.665,2,1.047,3,1.473,4,1.14,5,2.511,6,1.76,7,1.608,8,1.352,14,0.033,18,2.269,19,1.76,20,1.608,21,0.374,22,0.374,23,0.324,25,1.742,26,0.752,27,1.742,28,0.665,42,2.684,57,0.374,58,0.427,60,0.019,61,0.025,62,0.019,72,1.608,168,3.067,169,1.933,408,2.353,411,2.159,604,2.684,632,3.991,633,3.092,634,3.092,635,3.092,636,3.411,637,3.712,638,3.712,639,3.712,640,3.092]],["title/modules/UsersRoutingModule.html",[0,0.565,636,1.816]],["body/modules/UsersRoutingModule.html",[2,1.196,8,1.544,14,0.033,21,0.428,22,0.428,23,0.37,25,1.544,26,0.732,27,1.895,28,0.759,57,0.428,58,0.488,60,0.022,61,0.027,62,0.022,64,3.066,65,3.335,66,3.608,67,2.44,68,1.837,69,2.44,107,1.097,411,1.895,422,3.532,636,2.994,640,3.532,641,4.24]],["title/coverage.html",[642,3.581]],["body/coverage.html",[14,0.033,17,1.101,23,0.287,58,0.509,60,0.017,61,0.023,62,0.017,107,1.44,108,1.199,109,2.118,110,1.894,112,2.742,120,0.78,138,1.894,139,2.742,145,2.11,151,1.56,177,2.11,178,2.38,183,2.303,184,2.11,186,2.742,239,2.38,307,2.11,308,2.742,309,2.742,310,2.742,318,1.714,319,2.742,320,2.742,334,1.894,377,2.11,381,1.199,386,2.742,408,1.306,409,1.426,411,1.199,423,2.742,501,2.742,502,2.38,503,2.742,515,2.742,516,2.742,564,2.742,565,2.742,598,2.742,603,2.742,604,2.38,605,2.742,611,3.61,623,2.38,624,2.38,642,2.742,643,2.742,644,3.291,645,3.291,646,6.363,647,4.421,648,4.993,649,4.993,650,5.337,651,5.568,652,4.421,653,3.683,654,3.291,655,2.742,656,3.291,657,3.291,658,3.291,659,3.291]],["title/dependencies.html",[3,1.506,660,2.641]],["body/dependencies.html",[3,1.238,14,0.034,28,0.559,31,2.53,32,1.847,34,2.599,35,2.599,38,2.599,60,0.016,61,0.022,62,0.016,67,1.795,69,1.795,91,2.22,93,2.599,94,2.256,95,2.599,96,2.599,115,1.136,122,1.625,128,1.625,169,1.625,174,1.795,175,1.795,235,1.999,388,1.625,661,3.119,662,6.091,663,3.119,664,3.119,665,3.119,666,3.119,667,3.119,668,3.119,669,3.119,670,4.857,671,3.119,672,2.599,673,3.119,674,2.599,675,3.552,676,3.119,677,3.119,678,3.119,679,3.119,680,3.119,681,3.119,682,3.119,683,3.119,684,3.119,685,3.119,686,3.119,687,3.119,688,3.119,689,3.119,690,3.119,691,3.119,692,3.119,693,3.119,694,3.119,695,3.119,696,3.119,697,3.119,698,4.263,699,3.119,700,3.119,701,3.119,702,3.119,703,3.119,704,3.119,705,3.119,706,3.119,707,3.119,708,3.119,709,3.119,710,3.119,711,3.119,712,3.119,713,3.119,714,3.119,715,3.119,716,3.119,717,3.119,718,3.119,719,3.119,720,3.119,721,3.119,722,3.119,723,3.119,724,3.119,725,3.119]],["title/miscellaneous/functions.html",[726,1.693,727,3.161]],["body/miscellaneous/functions.html",[14,0.031,32,1.962,60,0.023,61,0.028,62,0.023,91,2.359,116,1.172,118,1.515,120,1.073,123,2.147,150,2.147,163,1.962,164,1.277,165,3.275,166,2.147,173,3.116,178,3.916,183,2.359,433,4.512,655,3.773,726,2.903,727,3.773,728,4.53,729,4.53,730,4.53,731,4.53]],["title/index.html",[116,0.683,732,2.2,733,2.2]],["body/index.html",[14,0.027,43,2.245,60,0.022,61,0.027,62,0.022,91,2.728,263,3.57,264,3.57,434,3.57,672,3.57,674,3.57,734,4.285,735,4.285,736,4.285,737,4.285,738,4.285,739,4.285,740,6.042,741,5.656,742,4.285,743,4.285,744,5.237,745,5.237,746,4.285,747,4.285,748,4.285,749,4.285,750,5.656,751,4.285,752,4.285,753,4.285,754,4.285,755,4.285]],["title/license.html",[732,2.2,733,2.2,756,2.2]],["body/license.html",[14,0.024,20,1.569,60,0.019,61,0.024,62,0.019,124,3.019,132,3.017,314,3.017,552,3.017,643,3.017,675,3.017,756,3.017,757,3.621,758,5.234,759,3.621,760,3.621,761,3.621,762,3.621,763,4.71,764,3.621,765,3.621,766,3.621,767,3.621,768,3.621,769,3.621,770,4.71,771,6.146,772,3.621,773,3.621,774,3.621,775,5.234,776,3.621,777,4.71,778,3.621,779,3.621,780,3.621,781,3.621,782,3.621,783,3.621,784,3.621,785,3.621,786,3.621,787,4.71,788,3.621,789,3.621,790,3.621,791,3.621,792,3.621,793,3.621,794,4.71,795,4.71,796,3.621,797,3.621,798,3.621,799,3.621,800,3.621,801,3.621,802,3.621,803,3.621,804,3.621,805,3.621,806,3.621,807,3.621,808,3.621,809,3.621,810,3.621,811,3.621,812,3.621,813,3.621,814,3.621,815,3.621,816,3.621,817,3.621,818,3.621,819,3.621,820,3.621,821,3.621,822,3.621]],["title/modules.html",[2,1.212]],["body/modules.html",[1,2.422,2,1.187,13,2.422,14,0.027,15,2.193,16,2.422,32,2.652,60,0.022,61,0.027,62,0.022,84,2.698,369,2.698,414,2.698,418,2.422,632,2.698,636,2.422,823,6.121,824,6.121,825,6.352,826,5.855,827,5.855]],["title/overview.html",[828,3.581]],["body/overview.html",[0,0.556,1,3.502,2,0.875,3,1.231,4,0.953,5,1.471,6,1.471,7,1.344,8,1.13,9,2.585,10,2.585,11,2.585,12,2.585,13,2.787,14,0.033,15,2.713,16,3.554,17,2.035,18,2.014,19,1.471,20,1.344,60,0.016,61,0.022,62,0.016,84,3.497,85,2.585,108,2.101,111,1.786,185,2.244,318,2.523,369,3.612,370,2.585,372,2.585,381,1.764,382,1.616,408,1.922,411,1.764,414,3.612,415,2.585,416,2.585,417,2.585,418,2.787,508,2.585,509,2.585,510,2.585,514,2.244,632,3.765,633,2.585,634,2.585,635,2.585,636,2.787,828,2.585,829,3.103,830,3.103,831,4.248,832,3.103]],["title/miscellaneous/variables.html",[222,2.183,726,1.693]],["body/miscellaneous/variables.html",[14,0.033,60,0.019,61,0.024,62,0.019,72,2.284,91,1.915,114,3.963,115,2.03,116,0.951,119,1.888,120,1.127,123,2.255,124,3.049,147,2.477,151,2.5,164,1.341,177,3.38,222,2.116,226,3.208,227,3.208,239,3.813,600,3.44,601,3.44,611,2.659,622,3.063,623,3.44,624,3.44,625,3.063,653,3.063,726,2.357,833,4.757,834,4.757,835,4.757,836,4.757,837,4.757,838,3.677,839,4.757,840,4.757,841,3.677]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":465,"title":{},"body":{"components/ShellComponent.html":{}}}],["0.0.4",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0.1.12",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":495,"title":{},"body":{"components/ShellComponent.html":{}}}],["0.2.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":472,"title":{},"body":{"components/ShellComponent.html":{}}}],["0.5rem",{"_index":485,"title":{},"body":{"components/ShellComponent.html":{}}}],["0.8.29",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":469,"title":{},"body":{"components/ShellComponent.html":{}}}],["1.0.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["1.6em",{"_index":488,"title":{},"body":{"components/ShellComponent.html":{}}}],["1.7.3",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":829,"title":{},"body":{"overview.html":{}}}],["100",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["10px",{"_index":499,"title":{},"body":{"components/ShellComponent.html":{}}}],["14.0.2",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["1rem",{"_index":446,"title":{},"body":{"components/ShellComponent.html":{}}}],["2",{"_index":831,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["2.4.8",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["2.88.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":760,"title":{},"body":{"license.html":{}}}],["2em",{"_index":449,"title":{},"body":{"components/ShellComponent.html":{}}}],["2px",{"_index":498,"title":{},"body":{"components/ShellComponent.html":{}}}],["3.0.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["3.1.10",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":490,"title":{},"body":{"components/ShellComponent.html":{}}}],["4",{"_index":832,"title":{},"body":{"overview.html":{}}}],["4.16.3",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":830,"title":{},"body":{"overview.html":{}}}],["5.4.19",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["8.0.1",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["a:active",{"_index":455,"title":{},"body":{"components/ShellComponent.html":{}}}],["a:hover",{"_index":454,"title":{},"body":{"components/ShellComponent.html":{}}}],["a:visited",{"_index":453,"title":{},"body":{"components/ShellComponent.html":{}}}],["above",{"_index":793,"title":{},"body":{"license.html":{}}}],["accept",{"_index":255,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["action",{"_index":817,"title":{},"body":{"license.html":{}}}],["active",{"_index":492,"title":{},"body":{"components/ShellComponent.html":{}}}],["actual_component",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["addentity",{"_index":301,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["additions",{"_index":211,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["administration",{"_index":748,"title":{},"body":{"index.html":{}}}],["align",{"_index":463,"title":{},"body":{"components/ShellComponent.html":{}}}],["allentities",{"_index":299,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["allows",{"_index":324,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["analytics",{"_index":751,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":785,"title":{},"body":{"license.html":{}}}],["angular",{"_index":99,"title":{},"body":{"modules/AppServerModule.html":{}}}],["angular/animations",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":169,"title":{},"body":{"modules/GraphQlModule.html":{},"modules/HomeModule.html":{},"components/ShellComponent.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":171,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{}}}],["angular/common/http/testing",{"_index":350,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{}}}],["angular/compiler",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/TransferStateMock.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":67,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angulartics",{"_index":430,"title":{},"body":{"components/ShellComponent.html":{}}}],["angulartics.starttracking",{"_index":439,"title":{},"body":{"components/ShellComponent.html":{}}}],["angulartics2",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angulartics2/gst",{"_index":436,"title":{},"body":{"components/ShellComponent.html":{}}}],["angulartics2googleglobalsitetag",{"_index":431,"title":{},"body":{"components/ShellComponent.html":{}}}],["angulartics2module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["animation",{"_index":441,"title":{},"body":{"components/ShellComponent.html":{}}}],["apollo",{"_index":674,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["app",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["app's",{"_index":425,"title":{},"body":{"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{}}}],["app.module",{"_index":97,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appid",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":256,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":13,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":84,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":821,"title":{},"body":{"license.html":{}}}],["array",{"_index":214,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["assertrequest",{"_index":521,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["assertrequest(key",{"_index":527,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["asserts",{"_index":530,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["associated",{"_index":772,"title":{},"body":{"license.html":{}}}],["authors",{"_index":810,"title":{},"body":{"license.html":{}}}],["auto",{"_index":470,"title":{},"body":{"components/ShellComponent.html":{}}}],["available",{"_index":827,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":315,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{}}}],["background",{"_index":493,"title":{},"body":{"components/ShellComponent.html":{}}}],["block",{"_index":444,"title":{},"body":{"components/ShellComponent.html":{}}}],["body",{"_index":316,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["boolean",{"_index":583,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["border",{"_index":486,"title":{},"body":{"components/ShellComponent.html":{}}}],["box",{"_index":496,"title":{},"body":{"components/ShellComponent.html":{}}}],["browse",{"_index":825,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/TransferStateMock.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["browserconfig",{"_index":204,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["browsermodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":101,"title":{},"body":{"modules/AppServerModule.html":{}}}],["build:server:watch",{"_index":746,"title":{},"body":{"index.html":{}}}],["built",{"_index":738,"title":{},"body":{"index.html":{}}}],["c",{"_index":759,"title":{},"body":{"license.html":{}}}],["cache",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["calc(2rem",{"_index":448,"title":{},"body":{"components/ShellComponent.html":{}}}],["callback",{"_index":585,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["center",{"_index":464,"title":{},"body":{"components/ShellComponent.html":{}}}],["chalk",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["changedetection",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{}}}],["changedetectionstrategy",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{}}}],["changes",{"_index":230,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["charge",{"_index":767,"title":{},"body":{"license.html":{}}}],["check",{"_index":264,"title":{},"body":{"injectables/GraphQlService.html":{},"index.html":{}}}],["checks",{"_index":581,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["cheerio",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["claim",{"_index":813,"title":{},"body":{"license.html":{}}}],["class",{"_index":58,"title":{"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":514,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"overview.html":{}}}],["cli/issues/12921",{"_index":106,"title":{},"body":{"modules/AppServerModule.html":{}}}],["client",{"_index":263,"title":{},"body":{"injectables/GraphQlService.html":{},"index.html":{}}}],["closed",{"_index":313,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":85,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":87,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":86,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_graphqltestingmodule",{"_index":370,"title":{},"body":{"modules/GraphQlTestingModule.html":{},"overview.html":{}}}],["cluster_graphqltestingmodule_imports",{"_index":371,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["cluster_graphqltestingmodule_providers",{"_index":372,"title":{},"body":{"modules/GraphQlTestingModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":415,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":416,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":417,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_shellmodule",{"_index":508,"title":{},"body":{"modules/ShellModule.html":{},"overview.html":{}}}],["cluster_shellmodule_declarations",{"_index":509,"title":{},"body":{"modules/ShellModule.html":{},"overview.html":{}}}],["cluster_shellmodule_exports",{"_index":510,"title":{},"body":{"modules/ShellModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":633,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":634,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":635,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collection",{"_index":149,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{}}}],["color",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{}}}],["color(black",{"_index":500,"title":{},"body":{"components/ShellComponent.html":{}}}],["color(white",{"_index":479,"title":{},"body":{"components/ShellComponent.html":{}}}],["commonmodule",{"_index":168,"title":{},"body":{"modules/GraphQlModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{}}}],["compatible",{"_index":103,"title":{},"body":{"modules/AppServerModule.html":{}}}],["compile",{"_index":743,"title":{},"body":{"index.html":{}}}],["complete",{"_index":284,"title":{},"body":{"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["complete(options",{"_index":532,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["completes",{"_index":535,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["component",{"_index":107,"title":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}},"body":{"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/user",{"_index":638,"title":{},"body":{"modules/UsersModule.html":{}}}],["compression",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":233,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["concat(of(allentities",{"_index":305,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["conditions",{"_index":792,"title":{},"body":{"license.html":{}}}],["config",{"_index":165,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"miscellaneous/functions.html":{}}}],["config.loadallmap(response",{"_index":290,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.onaddedmap",{"_index":293,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.onaddedmap(response",{"_index":295,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.onaddedquery",{"_index":292,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.origin",{"_index":247,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.provider",{"_index":240,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["config.uri",{"_index":248,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["configuration",{"_index":114,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":314,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"license.html":{}}}],["console",{"_index":755,"title":{},"body":{"index.html":{}}}],["const",{"_index":68,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"modules/HomeRoutingModule.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{},"modules/UsersRoutingModule.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(@inject(platform_id",{"_index":437,"title":{},"body":{"components/ShellComponent.html":{}}}],["constructor(browserconfig",{"_index":196,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["constructor(graphql",{"_index":615,"title":{},"body":{"components/UsersComponent.html":{}}}],["constructor(httptesting",{"_index":331,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["constructor(platform",{"_index":429,"title":{},"body":{"components/ShellComponent.html":{}}}],["constructor(private",{"_index":352,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"components/UsersComponent.html":{}}}],["contract",{"_index":818,"title":{},"body":{"license.html":{}}}],["controller",{"_index":321,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["cookie",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":787,"title":{},"body":{"license.html":{}}}],["copy",{"_index":770,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":758,"title":{},"body":{"license.html":{}}}],["core",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["cors",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":642,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":202,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["current",{"_index":134,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["cycle",{"_index":620,"title":{},"body":{"components/UsersComponent.html":{}}}],["damages",{"_index":814,"title":{},"body":{"license.html":{}}}],["data",{"_index":269,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/TransferStateMock.html":{}}}],["deal",{"_index":774,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":822,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoration",{"_index":451,"title":{},"body":{"components/ShellComponent.html":{}}}],["default",{"_index":226,"title":{},"body":{"injectables/GraphQlService.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":577,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["defined",{"_index":161,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["delete",{"_index":596,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["deletions",{"_index":213,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":182,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["description",{"_index":113,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["development",{"_index":739,"title":{},"body":{"index.html":{}}}],["direct",{"_index":517,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["directive",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["display",{"_index":443,"title":{},"body":{"components/ShellComponent.html":{}}}],["distribute",{"_index":783,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":643,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentnode",{"_index":528,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["dom",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dotenv",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["dynamic",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":600,"title":{},"body":{"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":234,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["enabled",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["endpoint",{"_index":137,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{}}}],["engine",{"_index":672,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["entities",{"_index":300,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["entity",{"_index":140,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{}}}],["entity(config",{"_index":205,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["environment",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiuri",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.origin",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":286,"title":{},"body":{"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["error(`query",{"_index":555,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["error(options",{"_index":537,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["event",{"_index":809,"title":{},"body":{"license.html":{}}}],["example",{"_index":520,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["executionresult",{"_index":154,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["expect",{"_index":339,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["expected",{"_index":531,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["expectquery",{"_index":328,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["expectquery(query",{"_index":337,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["expectsubscription",{"_index":329,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["expectsubscription(query",{"_index":345,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["export",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":675,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":567,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["factory",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["favicon",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["fernández",{"_index":762,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":622,"title":{},"body":{"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":773,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":805,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":461,"title":{},"body":{"components/ShellComponent.html":{}}}],["flex",{"_index":462,"title":{},"body":{"components/ShellComponent.html":{}}}],["flickering",{"_index":78,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["flush",{"_index":311,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["flush(options",{"_index":541,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["flushing",{"_index":326,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["focus",{"_index":478,"title":{},"body":{"components/ShellComponent.html":{}}}],["following",{"_index":791,"title":{},"body":{"license.html":{}}}],["font",{"_index":473,"title":{},"body":{"components/ShellComponent.html":{}}}],["forroot",{"_index":159,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["forroot(config",{"_index":160,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["free",{"_index":766,"title":{},"body":{"license.html":{}}}],["function",{"_index":145,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"interfaces/GraphQlTestRequest.html":{},"classes/TransferStateMock.html":{},"coverage.html":{}}}],["functions",{"_index":727,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":790,"title":{},"body":{"license.html":{}}}],["generaterequest",{"_index":522,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["generaterequest(key",{"_index":543,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["generates",{"_index":545,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["get(key",{"_index":575,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["get>(this.httpuri",{"_index":274,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["get_all_users_query",{"_index":623,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getkey",{"_index":523,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["getkey(undefined",{"_index":546,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["gets",{"_index":548,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["getting",{"_index":732,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":342,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["google",{"_index":750,"title":{},"body":{"index.html":{}}}],["granted",{"_index":765,"title":{},"body":{"license.html":{}}}],["graph",{"_index":826,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":115,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["graphql.module",{"_index":376,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["graphql_config",{"_index":177,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphqlconfig",{"_index":110,"title":{"interfaces/GraphQlConfig.html":{}},"body":{"interfaces/GraphQlConfig.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"coverage.html":{}}}],["graphqlentity",{"_index":138,"title":{"interfaces/GraphQlEntity.html":{}},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["graphqlmodule",{"_index":15,"title":{"modules/GraphQlModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule.forroot",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQlTestingModule.html":{}}}],["graphqlservice",{"_index":184,"title":{"injectables/GraphQlService.html":{}},"body":{"injectables/GraphQlService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["graphqltestingcontroller",{"_index":318,"title":{"injectables/GraphQlTestingController.html":{}},"body":{"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"coverage.html":{},"overview.html":{}}}],["graphqltestingmodule",{"_index":369,"title":{"modules/GraphQlTestingModule.html":{}},"body":{"modules/GraphQlTestingModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqltestrequest",{"_index":307,"title":{"interfaces/GraphQlTestRequest.html":{}},"body":{"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"coverage.html":{}}}],["handle",{"_index":187,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["handles",{"_index":207,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["haskey",{"_index":568,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["haskey(key",{"_index":579,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["headers",{"_index":254,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["helmet",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["hereby",{"_index":764,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["holders",{"_index":811,"title":{},"body":{"license.html":{}}}],["home",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["home'},{'name",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":420,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["home.component.html",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.module#homemodule",{"_index":71,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":381,"title":{"components/HomeComponent.html":{}},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":414,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":418,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hook",{"_index":621,"title":{},"body":{"components/UsersComponent.html":{}}}],["host",{"_index":442,"title":{},"body":{"components/ShellComponent.html":{}}}],["hover",{"_index":477,"title":{},"body":{"components/ShellComponent.html":{}}}],["html",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":121,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{}}}],["http://some_server",{"_index":378,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["httpclient",{"_index":199,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["httpclientmodule",{"_index":170,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["httpclienttestingmodule",{"_index":375,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["httprequest",{"_index":354,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["httprequest.flush(body",{"_index":365,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["https",{"_index":131,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["https://github.com/angular/angular",{"_index":105,"title":{},"body":{"modules/AppServerModule.html":{}}}],["https://github.com/prisma/graphql",{"_index":190,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["httptesting",{"_index":336,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["httptestingcontroller",{"_index":332,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["httpuri",{"_index":193,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["id",{"_index":601,"title":{},"body":{"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":519,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{}}}],["implied",{"_index":801,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["include",{"_index":458,"title":{},"body":{"components/ShellComponent.html":{}}}],["included",{"_index":796,"title":{},"body":{"license.html":{}}}],["including",{"_index":777,"title":{},"body":{"license.html":{}}}],["index",{"_index":116,"title":{"index.html":{}},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":526,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["indicator",{"_index":505,"title":{},"body":{"components/ShellLoadingComponent.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["inherit",{"_index":456,"title":{},"body":{"components/ShellComponent.html":{}}}],["init",{"_index":618,"title":{},"body":{"components/UsersComponent.html":{}}}],["initial",{"_index":209,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["initialnavigation",{"_index":76,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["inject",{"_index":231,"title":{},"body":{"injectables/GraphQlService.html":{},"components/ShellComponent.html":{}}}],["inject(graphql_config",{"_index":244,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["inject(server_graphql_config",{"_index":245,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["injectable",{"_index":183,"title":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{}},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectables",{"_index":185,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"overview.html":{}}}],["injected",{"_index":322,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["injection",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('graphql_config",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('server_graphql_config",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":484,"title":{},"body":{"components/ShellComponent.html":{}}}],["input",{"_index":610,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs",{"_index":608,"title":{},"body":{"components/UserListComponent.html":{}}}],["inspired",{"_index":189,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["instance",{"_index":203,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["instead",{"_index":129,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"classes/SubscriptionTestingClient.html":{}}}],["interface",{"_index":109,"title":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"interfaces/GraphQlTestRequest.html":{},"interfaces/User.html":{}},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"interfaces/GraphQlTestRequest.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":111,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"interfaces/GraphQlTestRequest.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":435,"title":{},"body":{"components/ShellComponent.html":{}}}],["isplatformbrowser(platform",{"_index":438,"title":{},"body":{"components/ShellComponent.html":{}}}],["item",{"_index":153,"title":{},"body":{"interfaces/GraphQlEntity.html":{}}}],["items",{"_index":148,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"components/ShellComponent.html":{}}}],["js",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(variables",{"_index":259,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["key",{"_index":260,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["kind",{"_index":800,"title":{},"body":{"license.html":{}}}],["lazy",{"_index":81,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["left",{"_index":466,"title":{},"body":{"components/ShellComponent.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["liability",{"_index":815,"title":{},"body":{"license.html":{}}}],["liable",{"_index":812,"title":{},"body":{"license.html":{}}}],["lib/graphql",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"components/UsersComponent.html":{}}}],["library",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":756,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":619,"title":{},"body":{"components/UsersComponent.html":{}}}],["limitation",{"_index":778,"title":{},"body":{"license.html":{}}}],["limited",{"_index":802,"title":{},"body":{"license.html":{}}}],["link",{"_index":483,"title":{},"body":{"components/ShellComponent.html":{}}}],["links",{"_index":749,"title":{},"body":{"index.html":{}}}],["list",{"_index":481,"title":{},"body":{"components/ShellComponent.html":{},"components/UserListComponent.html":{}}}],["list'},{'name",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["list.component",{"_index":639,"title":{},"body":{"modules/UsersModule.html":{}}}],["list.component.ts",{"_index":605,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":609,"title":{},"body":{"components/UserListComponent.html":{}}}],["list/user",{"_index":604,"title":{},"body":{"components/UserListComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["literal",{"_index":524,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["loadall",{"_index":288,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["loadall.pipe",{"_index":297,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["loadallmap",{"_index":141,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"components/UsersComponent.html":{}}}],["loadallquery",{"_index":142,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"components/UsersComponent.html":{}}}],["loadchildren",{"_index":70,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":82,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":96,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["loading",{"_index":504,"title":{},"body":{"components/ShellLoadingComponent.html":{}}}],["loading'},{'name",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["loading.component",{"_index":512,"title":{},"body":{"modules/ShellModule.html":{}}}],["loading.component.html",{"_index":506,"title":{},"body":{"components/ShellLoadingComponent.html":{}}}],["loading.component.ts",{"_index":503,"title":{},"body":{"components/ShellLoadingComponent.html":{},"coverage.html":{}}}],["loading.component.ts:11",{"_index":507,"title":{},"body":{"components/ShellLoadingComponent.html":{}}}],["loading/shell",{"_index":502,"title":{},"body":{"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"coverage.html":{}}}],["loads",{"_index":208,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["made",{"_index":340,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["makes",{"_index":225,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["makestatekey",{"_index":232,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["makestatekey>(json.stringify(params",{"_index":261,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["manager",{"_index":753,"title":{},"body":{"index.html":{}}}],["map",{"_index":94,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/GraphQlService.html":{},"dependencies.html":{}}}],["map((newentity",{"_index":303,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["mapping",{"_index":146,"title":{},"body":{"interfaces/GraphQlEntity.html":{}}}],["margin",{"_index":471,"title":{},"body":{"components/ShellComponent.html":{}}}],["match",{"_index":356,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["matches",{"_index":341,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["matching",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":597,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["memory",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["merchantability",{"_index":804,"title":{},"body":{"license.html":{}}}],["merge",{"_index":781,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["methods",{"_index":157,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{}}}],["miscellaneous",{"_index":726,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":757,"title":{},"body":{"license.html":{}}}],["mock",{"_index":343,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["mocking",{"_index":325,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["mode",{"_index":745,"title":{},"body":{"index.html":{}}}],["model",{"_index":599,"title":{},"body":{"interfaces/User.html":{}}}],["models",{"_index":176,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["modifications",{"_index":212,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["modify",{"_index":780,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modulemaploadermodule",{"_index":92,"title":{},"body":{"modules/AppServerModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":167,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["mongodb",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["mongoose",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["morgan",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":164,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":457,"title":{},"body":{"components/ShellComponent.html":{}}}],["nav__header",{"_index":468,"title":{},"body":{"components/ShellComponent.html":{}}}],["nav__link",{"_index":491,"title":{},"body":{"components/ShellComponent.html":{}}}],["nav__links",{"_index":480,"title":{},"body":{"components/ShellComponent.html":{}}}],["needed",{"_index":518,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["new",{"_index":151,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newentity",{"_index":304,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["next",{"_index":281,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["ngfactory",{"_index":95,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["ngoninit",{"_index":614,"title":{},"body":{"components/UsersComponent.html":{}}}],["nguniversal/common",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/express",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/module",{"_index":93,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["none",{"_index":452,"title":{},"body":{"components/ShellComponent.html":{}}}],["noninfringement",{"_index":808,"title":{},"body":{"license.html":{}}}],["noop",{"_index":587,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["normalize",{"_index":220,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["normalize.css",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["nothing",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":794,"title":{},"body":{"license.html":{}}}],["now",{"_index":98,"title":{},"body":{"modules/AppServerModule.html":{}}}],["npm",{"_index":741,"title":{},"body":{"index.html":{}}}],["object",{"_index":223,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{}}}],["observable",{"_index":216,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{}}}],["observable.create((observer",{"_index":278,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["observer.complete",{"_index":285,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["observer.error(error",{"_index":287,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["observer.next(response",{"_index":283,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["obtaining",{"_index":769,"title":{},"body":{"license.html":{}}}],["of(allentities",{"_index":306,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["of(result",{"_index":271,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["onadded",{"_index":291,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["onadded.pipe",{"_index":302,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["onaddedmap",{"_index":143,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"components/UsersComponent.html":{}}}],["onaddedquery",{"_index":144,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"components/UsersComponent.html":{}}}],["oninit",{"_index":613,"title":{},"body":{"components/UsersComponent.html":{}}}],["onserialize",{"_index":569,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["onserialize(key",{"_index":584,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["opacity",{"_index":494,"title":{},"body":{"components/ShellComponent.html":{}}}],["operationoptions",{"_index":533,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["optional",{"_index":118,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":536,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["options.query",{"_index":560,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["origin",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/GraphQlConfig.html":{},"modules/GraphQlTestingModule.html":{}}}],["otherwise",{"_index":820,"title":{},"body":{"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":349,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["overview",{"_index":828,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":660,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":445,"title":{},"body":{"components/ShellComponent.html":{}}}],["palette",{"_index":440,"title":{},"body":{"components/ShellComponent.html":{}}}],["param",{"_index":243,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{}}}],["parameters",{"_index":163,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":257,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{}}}],["parser",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":198,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{}}}],["particular",{"_index":806,"title":{},"body":{"license.html":{}}}],["path",{"_index":69,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/HomeRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["permission",{"_index":763,"title":{},"body":{"license.html":{}}}],["permit",{"_index":788,"title":{},"body":{"license.html":{}}}],["persist",{"_index":272,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["person",{"_index":768,"title":{},"body":{"license.html":{}}}],["persons",{"_index":789,"title":{},"body":{"license.html":{}}}],["pipe(tap((result",{"_index":275,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["platform",{"_index":433,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/functions.html":{}}}],["platform_id",{"_index":172,"title":{},"body":{"modules/GraphQlModule.html":{},"components/ShellComponent.html":{}}}],["portfolio",{"_index":434,"title":{},"body":{"components/ShellComponent.html":{},"index.html":{}}}],["portions",{"_index":798,"title":{},"body":{"license.html":{}}}],["position",{"_index":460,"title":{},"body":{"components/ShellComponent.html":{}}}],["present",{"_index":582,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["presentational",{"_index":606,"title":{},"body":{"components/UserListComponent.html":{}}}],["prevents",{"_index":77,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["private",{"_index":194,"title":{},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["process",{"_index":102,"title":{},"body":{"modules/AppServerModule.html":{}}}],["processquery",{"_index":195,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["processquery(query",{"_index":217,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["project",{"_index":737,"title":{},"body":{"index.html":{}}}],["project's",{"_index":734,"title":{},"body":{"index.html":{}}}],["properties",{"_index":117,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{}}}],["provided",{"_index":132,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"license.html":{}}}],["providedin",{"_index":241,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":782,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":807,"title":{},"body":{"license.html":{}}}],["queries",{"_index":188,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["query",{"_index":147,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["query(query",{"_index":221,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["radius",{"_index":487,"title":{},"body":{"components/ShellComponent.html":{}}}],["rc.2",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":192,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["redirect",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["redirectto",{"_index":74,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reflect",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["regexp",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":136,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["remove",{"_index":570,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["remove(key",{"_index":588,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["removes",{"_index":590,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["renders",{"_index":80,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["replace(/\\s*\\{\\s*/g",{"_index":250,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["replace(/\\s*\\}\\s*/g",{"_index":251,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["replace(/\\s+/g",{"_index":249,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["req.headers.get('accept",{"_index":360,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.headers.has('accept",{"_index":359,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.params.get('query",{"_index":362,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.params.get('variables",{"_index":364,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.params.has('query",{"_index":361,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.params.has('variables",{"_index":363,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["req.url.includes('graphql",{"_index":358,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["request",{"_index":122,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"dependencies.html":{}}}],["request(options",{"_index":549,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["request.interface.ts",{"_index":310,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"coverage.html":{}}}],["request/blob/master/src/index.ts",{"_index":191,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["requests",{"_index":327,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolves",{"_index":539,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["response",{"_index":282,"title":{},"body":{"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"components/UsersComponent.html":{}}}],["response.data.useradded",{"_index":629,"title":{},"body":{"components/UsersComponent.html":{}}}],["response.data.users",{"_index":628,"title":{},"body":{"components/UsersComponent.html":{}}}],["restriction",{"_index":776,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":150,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"miscellaneous/functions.html":{}}}],["returning",{"_index":540,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["returns",{"_index":166,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":467,"title":{},"body":{"components/ShellComponent.html":{}}}],["rights",{"_index":779,"title":{},"body":{"license.html":{}}}],["root",{"_index":242,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["route",{"_index":83,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":65,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/ShellModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":422,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":75,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":66,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/HomeRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routing.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":64,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["run",{"_index":740,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":235,"title":{},"body":{"injectables/GraphQlService.html":{},"classes/SubscriptionTestingClient.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":238,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["same",{"_index":126,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["samuel",{"_index":761,"title":{},"body":{"license.html":{}}}],["search",{"_index":754,"title":{},"body":{"index.html":{}}}],["see",{"_index":736,"title":{},"body":{"index.html":{}}}],["selector",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sell",{"_index":786,"title":{},"body":{"license.html":{}}}],["serve",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":91,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/GraphQlService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server:watch",{"_index":747,"title":{},"body":{"index.html":{}}}],["server_graphql_config",{"_index":239,"title":{},"body":{"injectables/GraphQlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverapp",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["serverconfig",{"_index":197,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["servermodule",{"_index":89,"title":{},"body":{"modules/AppServerModule.html":{}}}],["servertransferstatemodule",{"_index":90,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":133,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{}}}],["serviceworkermodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":571,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["set(key",{"_index":591,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["sets",{"_index":593,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["shadow",{"_index":497,"title":{},"body":{"components/ShellComponent.html":{}}}],["shall",{"_index":795,"title":{},"body":{"license.html":{}}}],["shell",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["shell'},{'name",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["shell.component",{"_index":513,"title":{},"body":{"modules/ShellModule.html":{}}}],["shell.component.html",{"_index":427,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":426,"title":{},"body":{"components/ShellComponent.html":{}}}],["shellcomponent",{"_index":17,"title":{"components/ShellComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shellloadingcomponent",{"_index":108,"title":{"components/ShellLoadingComponent.html":{}},"body":{"modules/AppServerModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shellmodule",{"_index":16,"title":{"modules/ShellModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShellModule.html":{},"modules.html":{},"overview.html":{}}}],["simulates",{"_index":312,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{}}}],["single",{"_index":152,"title":{},"body":{"interfaces/GraphQlEntity.html":{}}}],["size",{"_index":474,"title":{},"body":{"components/ShellComponent.html":{}}}],["smart",{"_index":612,"title":{},"body":{"components/UsersComponent.html":{}}}],["software",{"_index":771,"title":{},"body":{"license.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"modules/ShellModule.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["src/.../config.provider.ts",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscription.factory.ts",{"_index":728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../users.component.ts",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":63,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.server.module.ts",{"_index":88,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/home/home",{"_index":421,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/home/home.component.ts",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:12",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":419,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/shell/shell",{"_index":501,"title":{},"body":{"components/ShellLoadingComponent.html":{},"coverage.html":{}}}],["src/app/shell/shell.component.ts",{"_index":423,"title":{},"body":{"components/ShellComponent.html":{},"coverage.html":{}}}],["src/app/shell/shell.component.ts:18",{"_index":432,"title":{},"body":{"components/ShellComponent.html":{}}}],["src/app/shell/shell.module.ts",{"_index":511,"title":{},"body":{"modules/ShellModule.html":{}}}],["src/app/users/components/user",{"_index":603,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/users/models/user.ts",{"_index":598,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/users/users",{"_index":641,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["src/app/users/users.component.ts",{"_index":611,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.component.ts:46",{"_index":616,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:57",{"_index":617,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.module.ts",{"_index":637,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/lib/graphql/graphql.module.ts",{"_index":156,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["src/lib/graphql/graphql.module.ts:12",{"_index":162,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["src/lib/graphql/models/config.interface.ts",{"_index":112,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"coverage.html":{}}}],["src/lib/graphql/models/entity.interface.ts",{"_index":139,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"coverage.html":{}}}],["src/lib/graphql/providers/config.provider.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/graphql/providers/graphql.service.ts",{"_index":186,"title":{},"body":{"injectables/GraphQlService.html":{},"coverage.html":{}}}],["src/lib/graphql/providers/graphql.service.ts:116",{"_index":206,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["src/lib/graphql/providers/graphql.service.ts:22",{"_index":201,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["src/lib/graphql/providers/graphql.service.ts:52",{"_index":218,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["src/lib/graphql/providers/graphql.service.ts:67",{"_index":224,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["src/lib/graphql/providers/graphql.service.ts:96",{"_index":229,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["src/lib/graphql/providers/subscription.factory.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/graphql/testing/graphql",{"_index":373,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["src/lib/graphql/testing/models/graphql",{"_index":308,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"coverage.html":{}}}],["src/lib/graphql/testing/providers/graphql",{"_index":319,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"coverage.html":{}}}],["src/lib/graphql/testing/providers/subscription",{"_index":515,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"coverage.html":{}}}],["src/lib/graphql/testing/providers/transfer",{"_index":564,"title":{},"body":{"classes/TransferStateMock.html":{},"coverage.html":{}}}],["ssl",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["ssr",{"_index":100,"title":{},"body":{"modules/AppServerModule.html":{}}}],["standalone",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":742,"title":{},"body":{"index.html":{}}}],["started",{"_index":733,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":265,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["state.ts",{"_index":565,"title":{},"body":{"classes/TransferStateMock.html":{},"coverage.html":{}}}],["state.ts:12",{"_index":573,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:21",{"_index":578,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:31",{"_index":592,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:40",{"_index":589,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:50",{"_index":580,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:60",{"_index":586,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["state.ts:67",{"_index":594,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["statekey",{"_index":576,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["statements",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["store",{"_index":574,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["stored",{"_index":267,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["stream",{"_index":551,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["string",{"_index":119,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":482,"title":{},"body":{"components/ShellComponent.html":{}}}],["styles",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{}}}],["styleurls",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{}}}],["subject",{"_index":552,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"license.html":{}}}],["sublicense",{"_index":784,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":280,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["subscribes",{"_index":210,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["subscription",{"_index":123,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subscription(query",{"_index":228,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["subscriptionclient",{"_index":173,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"miscellaneous/functions.html":{}}}],["subscriptionfactory",{"_index":178,"title":{},"body":{"modules/GraphQlModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["subscriptionfactory(config",{"_index":729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":174,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"dependencies.html":{}}}],["subscriptiontesting",{"_index":333,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["subscriptiontestingclient",{"_index":334,"title":{"classes/SubscriptionTestingClient.html":{}},"body":{"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"coverage.html":{}}}],["substantial",{"_index":797,"title":{},"body":{"license.html":{}}}],["support",{"_index":823,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":824,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":236,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["switchmap((entities",{"_index":298,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["t",{"_index":155,"title":{},"body":{"interfaces/GraphQlEntity.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/TransferStateMock.html":{}}}],["table",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":752,"title":{},"body":{"index.html":{}}}],["tap",{"_index":237,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["template",{"_index":253,"title":{},"body":{"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"classes/TransferStateMock.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{}}}],["test",{"_index":309,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"coverage.html":{}}}],["testing",{"_index":351,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"modules/GraphQlTestingModule.html":{}}}],["testing.controller.ts",{"_index":320,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"coverage.html":{}}}],["testing.controller.ts:11",{"_index":335,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["testing.controller.ts:22",{"_index":347,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["testing.controller.ts:33",{"_index":338,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["testing.controller.ts:63",{"_index":346,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["testing.module.ts",{"_index":374,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["testing.ts",{"_index":516,"title":{},"body":{"classes/SubscriptionTestingClient.html":{},"coverage.html":{}}}],["testing.ts:14",{"_index":525,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:21",{"_index":547,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:29",{"_index":544,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:40",{"_index":529,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:51",{"_index":550,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:62",{"_index":542,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:73",{"_index":538,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["testing.ts:83",{"_index":534,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["tests",{"_index":323,"title":{},"body":{"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["text",{"_index":450,"title":{},"body":{"components/ShellComponent.html":{}}}],["theme(dark",{"_index":459,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.assertrequest(key",{"_index":559,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.data[key",{"_index":595,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["this.generaterequest(key",{"_index":557,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.getkey(options",{"_index":556,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.graphql.entity(userentity",{"_index":631,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.http",{"_index":273,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.httptesting.expectone((req",{"_index":355,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["this.httptesting.verify",{"_index":353,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["this.httpuri",{"_index":246,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.processquery(query",{"_index":258,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.query(config.loadallquery).pipe(map((response",{"_index":289,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.requests[key",{"_index":553,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.requests[key].asobservable",{"_index":558,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.requests[key].complete",{"_index":563,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.requests[key].error(error",{"_index":562,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.requests[key].next(body",{"_index":561,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["this.subscription(config.onaddedquery).pipe(map((response",{"_index":294,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.subscriptiontesting.complete",{"_index":368,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["this.subscriptiontesting.error",{"_index":367,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["this.subscriptiontesting.flush",{"_index":366,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["this.transferstate.get(key",{"_index":268,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.transferstate.haskey(key",{"_index":262,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.transferstate.remove(key",{"_index":270,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.transferstate.set(key",{"_index":276,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.users",{"_index":630,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.ws",{"_index":277,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["this.ws.request",{"_index":279,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["throw",{"_index":554,"title":{},"body":{"classes/SubscriptionTestingClient.html":{}}}],["time",{"_index":215,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["title",{"_index":428,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tojson",{"_index":572,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["token",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":447,"title":{},"body":{"components/ShellComponent.html":{}}}],["tort",{"_index":819,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":266,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["transferstate",{"_index":200,"title":{},"body":{"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/TransferStateMock.html":{}}}],["transferstatemock",{"_index":377,"title":{"classes/TransferStateMock.html":{}},"body":{"modules/GraphQlTestingModule.html":{},"classes/TransferStateMock.html":{},"coverage.html":{}}}],["transition",{"_index":475,"title":{},"body":{"components/ShellComponent.html":{}}}],["transition(all",{"_index":476,"title":{},"body":{"components/ShellComponent.html":{}}}],["transport",{"_index":175,"title":{},"body":{"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"dependencies.html":{}}}],["tree",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["trim",{"_index":252,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["trims",{"_index":219,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["true",{"_index":357,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["type",{"_index":120,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"interfaces/GraphQlEntity.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"injectables/GraphQlService.html":{}}}],["unit",{"_index":566,"title":{},"body":{"classes/TransferStateMock.html":{}}}],["universal",{"_index":79,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["unmatched",{"_index":348,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["uri",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"interfaces/GraphQlConfig.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{}}}],["use",{"_index":124,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"classes/SubscriptionTestingClient.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":380,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["used",{"_index":424,"title":{},"body":{"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{}}}],["useexisting",{"_index":379,"title":{},"body":{"modules/GraphQlTestingModule.html":{}}}],["usefactory",{"_index":181,"title":{},"body":{"modules/GraphQlModule.html":{},"modules/GraphQlTestingModule.html":{}}}],["user",{"_index":409,"title":{"interfaces/User.html":{}},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user's",{"_index":602,"title":{},"body":{"interfaces/User.html":{},"components/UserListComponent.html":{}}}],["user.name",{"_index":607,"title":{},"body":{"components/UserListComponent.html":{}}}],["user_added_subscription",{"_index":624,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useradded",{"_index":625,"title":{},"body":{"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":627,"title":{},"body":{"components/UsersComponent.html":{}}}],["userlistcomponent",{"_index":408,"title":{"components/UserListComponent.html":{}},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":72,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["users.component",{"_index":640,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["users/users.module#usersmodule",{"_index":73,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userscomponent",{"_index":411,"title":{"components/UsersComponent.html":{}},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":632,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersquery",{"_index":626,"title":{},"body":{"components/UsersComponent.html":{}}}],["usersroutingmodule",{"_index":636,"title":{"modules/UsersRoutingModule.html":{}},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usevalue",{"_index":180,"title":{},"body":{"modules/GraphQlModule.html":{}}}],["using",{"_index":127,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["v7",{"_index":104,"title":{},"body":{"modules/AppServerModule.html":{}}}],["value",{"_index":227,"title":{},"body":{"injectables/GraphQlService.html":{},"components/ShellComponent.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{},"components/ShellComponent.html":{},"components/ShellLoadingComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":222,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GraphQlService.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"miscellaneous/variables.html":{}}}],["verify",{"_index":330,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["void",{"_index":317,"title":{},"body":{"interfaces/GraphQlTestRequest.html":{},"injectables/GraphQlTestingController.html":{},"classes/SubscriptionTestingClient.html":{},"classes/TransferStateMock.html":{},"components/UsersComponent.html":{}}}],["warranties",{"_index":803,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":799,"title":{},"body":{"license.html":{}}}],["watch",{"_index":744,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":125,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["weight",{"_index":489,"title":{},"body":{"components/ShellComponent.html":{}}}],["whether",{"_index":816,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":735,"title":{},"body":{"index.html":{}}}],["window",{"_index":135,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["without",{"_index":775,"title":{},"body":{"license.html":{}}}],["worker",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["ws",{"_index":128,"title":{},"body":{"interfaces/GraphQlConfig.html":{},"modules/GraphQlModule.html":{},"injectables/GraphQlService.html":{},"modules/GraphQlTestingModule.html":{},"classes/SubscriptionTestingClient.html":{},"dependencies.html":{}}}],["wss",{"_index":130,"title":{},"body":{"interfaces/GraphQlConfig.html":{}}}],["yes",{"_index":344,"title":{},"body":{"injectables/GraphQlTestingController.html":{}}}],["zone.js",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/GraphQlTestingModule.html":{},"modules/HomeModule.html":{},"modules/ShellModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQlModule\n\nGraphQlModule\n\nAppModule -->\n\nGraphQlModule->AppModule\n\n\n\n\n\nShellModule\n\nShellModule\n\nAppModule -->\n\nShellModule->AppModule\n\n\n\n\n\nShellModule \n\nShellModule \n\nShellModule  -->\n\nAppModule->ShellModule \n\n\n\n\n\nShellComponent \n\nShellComponent \n\nShellComponent  -->\n\nAppModule->ShellComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQlModule\n                        \n                        \n                            ShellModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShellModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ShellComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { GraphQlModule } from '@lib/graphql';\nimport { Angulartics2Module } from 'angulartics2';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ShellComponent, ShellModule } from './shell';\n\n@NgModule({\n   imports: [\n      BrowserModule.withServerTransition({ appId: 'serverApp' }),\n      BrowserTransferStateModule,\n      GraphQlModule.forRoot({ origin: environment.origin, uri: environment.apiUri }),\n      ShellModule,\n      AppRoutingModule,\n      ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n      Angulartics2Module.forRoot(),\n   ],\n   exports: [ShellModule],\n   bootstrap: [ShellComponent],\n})\nexport class AppModule {\n   constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n   { path: '', loadChildren: './home/home.module#HomeModule' },\n   { path: 'users', loadChildren: './users/users.module#UsersModule' },\n   { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n   imports: [\n      RouterModule.forRoot(routes, {\n         initialNavigation: 'enabled', // Prevents flickering when Universal renders a lazy-loaded route\n      }),\n   ],\n   exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nShellComponent \n\nShellComponent \n\nShellComponent  -->\n\nAppServerModule->ShellComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ShellComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule, ServerTransferStateModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\nimport { AppModule } from './app.module';\nimport { ShellComponent } from './shell';\n\n// By now Angular SSR build process is not compatible with App Shell in Angular v7\n// https://github.com/angular/angular-cli/issues/12921\n// const routes: Routes = [{ path: '**', component: ShellLoadingComponent }];\n\n@NgModule({\n   imports: [AppModule, ServerModule, ServerTransferStateModule, ModuleMapLoaderModule],\n   bootstrap: [ShellComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphQlConfig.html":{"url":"interfaces/GraphQlConfig.html","title":"interface - GraphQlConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphQlConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/models/config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for GraphQl module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        origin\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The origin for the http request. For subscription it will use websockets, and will use the same origin\nbut using ws instead of http, or wss instead of https.\nIf not provided in browser the service will use the same origin as the current window.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Relative URI for the GraphQl endpoint.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GraphQlConfig {\n   /**\n    * The origin for the http request. For subscription it will use websockets, and will use the same origin\n    * but using ws instead of http, or wss instead of https.\n    * If not provided in browser the service will use the same origin as the current window.\n    */\n   origin?: string;\n\n   /**\n    * Relative URI for the GraphQl endpoint.\n    */\n   uri: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphQlEntity.html":{"url":"interfaces/GraphQlEntity.html","title":"interface - GraphQlEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphQlEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/models/entity.interface.ts\n        \n\n            \n                Description\n            \n            \n                GraphQl entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loadAllMap\n                                \n                                \n                                        loadAllQuery\n                                \n                                \n                                            Optional\n                                        onAddedMap\n                                \n                                \n                                            Optional\n                                        onAddedQuery\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loadAllMap\n                                    \n                                \n                                \n                                    \n                                        loadAllMap:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mapping from the query result to the items collection.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAllQuery\n                                    \n                                \n                                \n                                    \n                                        loadAllQuery:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Query to return all items.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onAddedMap\n                                    \n                                \n                                \n                                    \n                                        onAddedMap:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mapping from the new items subscription result to the single item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onAddedQuery\n                                    \n                                \n                                \n                                    \n                                        onAddedQuery:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription to get new items.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExecutionResult } from 'graphql';\n\n/**\n * GraphQl entity.\n */\nexport interface GraphQlEntity {\n   /**\n    * Query to return all items.\n    */\n   loadAllQuery: string;\n\n   /**\n    * Mapping from the query result to the items collection.\n    */\n   loadAllMap: (result: ExecutionResult) => T[];\n\n   /**\n    * Subscription to get new items.\n    */\n   onAddedQuery?: string;\n\n   /**\n    * Mapping from the new items subscription result to the single item.\n    */\n   onAddedMap?: (result: ExecutionResult) => T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQlModule.html":{"url":"modules/GraphQlModule.html","title":"module - GraphQlModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQlModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/graphql/graphql.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: GraphQlConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/graphql.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GraphQlConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { GraphQlConfig } from './models';\nimport { GRAPHQL_CONFIG, SubscriptionFactory } from './providers';\n\n@NgModule({\n   imports: [CommonModule, HttpClientModule],\n})\nexport class GraphQlModule {\n   static forRoot(config: GraphQlConfig): ModuleWithProviders {\n      return {\n         ngModule: GraphQlModule,\n         providers: [\n            { provide: GRAPHQL_CONFIG, useValue: config },\n            { provide: SubscriptionClient, useFactory: SubscriptionFactory, deps: [GRAPHQL_CONFIG, PLATFORM_ID] },\n         ],\n      };\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphQlService.html":{"url":"injectables/GraphQlService.html","title":"injectable - GraphQlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphQlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/providers/graphql.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to handle GraphQl queries and subscriptions.\nInspired on https://github.com/prisma/graphql-request/blob/master/src/index.ts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                httpUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entity\n                            \n                            \n                                    Private\n                                processQuery\n                            \n                            \n                                query\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(browserConfig: GraphQlConfig, serverConfig: Partial, ws: SubscriptionClient, http: HttpClient, transferState: TransferState)\n                    \n                \n                        \n                            \n                                Defined in src/lib/graphql/providers/graphql.service.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of GraphQlService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        browserConfig\n                                                  \n                                                        \n                                                                        GraphQlConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serverConfig\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                    SubscriptionClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(config: GraphQlEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/providers/graphql.service.ts:116\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Handles a collection of items. It loads initial items, and subscribes to additions, modifications or deletions.\nIt returns a new array every time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                GraphQlEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processQuery(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/providers/graphql.service.ts:52\n                \n            \n\n\n            \n                \n                    Trims the query string to normalize it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            query\n                        \n                        \n                    \n                \n            \n            \n                \nquery(query: string, variables: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/providers/graphql.service.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a query request to the endpoint.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscription\n                        \n                        \n                    \n                \n            \n            \n                \nsubscription(query: string, variables: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/providers/graphql.service.ts:96\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribes to changes of an endpoint.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            httpUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/graphql/providers/graphql.service.ts:22\n                            \n                        \n\n                \n                    \n                        URI of the http endpoint for queries.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { ExecutionResult } from 'graphql';\nimport { concat, EMPTY, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { GraphQlConfig, GraphQlEntity } from '../models';\nimport { GRAPHQL_CONFIG, SERVER_GRAPHQL_CONFIG } from './config.provider';\n\n/**\n * Service to handle GraphQl queries and subscriptions.\n *\n * Inspired on https://github.com/prisma/graphql-request/blob/master/src/index.ts\n */\n@Injectable({ providedIn: 'root' })\nexport class GraphQlService {\n   /**\n    * URI of the http endpoint for queries.\n    * @type {string}\n    */\n   readonly httpUri: string;\n\n   /**\n    * Creates an instance of GraphQlService.\n    * @param {GraphQlConfig} browserConfig\n    * @param {Partial} serverConfig\n    * @param {SubscriptionClient} ws\n    * @param {HttpClient} http\n    * @param {TransferState} transferState\n    */\n   constructor(\n      @Inject(GRAPHQL_CONFIG) browserConfig: GraphQlConfig,\n      @Optional() @Inject(SERVER_GRAPHQL_CONFIG) serverConfig: Partial,\n      private ws: SubscriptionClient,\n      private http: HttpClient,\n      private transferState: TransferState\n   ) {\n      const config: GraphQlConfig = {\n         ...browserConfig,\n         ...(serverConfig || {}),\n      };\n\n      this.httpUri = `${config.origin || ''}${config.uri}`;\n   }\n\n   /**\n    * Trims the query string to normalize it.\n    * @param {string} query\n    * @returns {string}\n    */\n   private processQuery(query: string): string {\n      return query\n         .replace(/\\s+/g, ' ')\n         .replace(/\\s*\\{\\s*/g, '{')\n         .replace(/\\s*\\}\\s*/g, '}')\n         .trim();\n   }\n\n   /**\n    * Makes a query request to the endpoint.\n    * @template T\n    * @param {string} query\n    * @param {Object} [variables={}]\n    * @returns {Observable>}\n    */\n   query(query: string, variables: Object = {}): Observable> {\n      const headers = { Accept: 'application/json' };\n      const params = {\n         query: this.processQuery(query),\n         variables: JSON.stringify(variables),\n      };\n\n      const key = makeStateKey>(JSON.stringify(params));\n\n      if (this.transferState.hasKey(key)) {\n         // If in client, check if state transfer has the value stored\n         const result = this.transferState.get(key, { data: {} } as any);\n         this.transferState.remove(key);\n         return of(result);\n      } else {\n         // If in the server, persist the query result\n         return this.http\n            .get>(this.httpUri, { headers, params })\n            .pipe(tap((result) => this.transferState.set(key, result)));\n      }\n   }\n\n   /**\n    * Subscribes to changes of an endpoint.\n    * @template T\n    * @param {string} query\n    * @param {Object} [variables={}]\n    * @returns {Observable>}\n    */\n   subscription(query: string, variables: Object = {}): Observable> {\n      return this.ws\n         ? Observable.create((observer) =>\n              this.ws.request({ query: this.processQuery(query), variables }).subscribe({\n                 next: (response: ExecutionResult) => observer.next(response),\n                 complete: () => observer.complete(),\n                 error: (error) => observer.error(error),\n              })\n           )\n         : EMPTY;\n   }\n\n   /**\n    * Handles a collection of items. It loads initial items, and subscribes to additions, modifications or deletions.\n    * It returns a new array every time.\n    *\n    * @template T\n    * @param {GraphQlEntity} config\n    * @returns {Observable}\n    */\n   entity(config: GraphQlEntity): Observable {\n      const loadAll = this.query(config.loadAllQuery).pipe(map((response) => config.loadAllMap(response)));\n      const onAdded =\n         config.onAddedQuery && config.onAddedMap\n            ? this.subscription(config.onAddedQuery).pipe(map((response) => config.onAddedMap(response)))\n            : undefined;\n\n      return loadAll.pipe(\n         switchMap((entities) => {\n            let allEntities = [...entities];\n\n            if (onAdded) {\n               const addEntity = onAdded.pipe(\n                  map((newEntity) => {\n                     allEntities = [...allEntities, newEntity];\n                     return allEntities;\n                  })\n               );\n\n               return concat(of(allEntities), addEntity);\n            } else {\n               return of(allEntities);\n            }\n         })\n      );\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphQlTestRequest.html":{"url":"interfaces/GraphQlTestRequest.html","title":"interface - GraphQlTestRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphQlTestRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/testing/models/graphql-test-request.interface.ts\n        \n\n            \n                Description\n            \n            \n                GraphQl request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        complete\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        flush\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                    \n                                \n                                \n                                    \n                                        complete:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Simulates closed connection from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Simulates error from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flush\n                                    \n                                \n                                \n                                    \n                                        flush:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulates response from the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExecutionResult } from 'graphql';\n\n/**\n * GraphQl request.\n * @interface GraphQlTestRequest\n * @template T\n */\nexport interface GraphQlTestRequest {\n   /**\n    * Simulates response from the backend.\n    */\n   flush: (body: ExecutionResult) => void;\n\n   /**\n    * Simulates error from the backend.\n    */\n   error?: (error: Error) => void;\n\n   /**\n    * Simulates closed connection from the backend.\n    */\n   complete?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphQlTestingController.html":{"url":"injectables/GraphQlTestingController.html","title":"injectable - GraphQlTestingController","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphQlTestingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/testing/providers/graphql-testing.controller.ts\n        \n\n            \n                Description\n            \n            \n                Controller to be injected into tests, that allows for mocking and flushing of requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expectQuery\n                            \n                            \n                                expectSubscription\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpTesting: HttpTestingController, subscriptionTesting: SubscriptionTestingClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/graphql/testing/providers/graphql-testing.controller.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of GraphQlTestingController.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpTesting\n                                                  \n                                                        \n                                                                        HttpTestingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionTesting\n                                                  \n                                                        \n                                                                        SubscriptionTestingClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expectQuery\n                        \n                        \n                    \n                \n            \n            \n                \nexpectQuery(query: string, variables?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/graphql-testing.controller.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Expect that a request has been made which matches the given query, and return its mock.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphQlTestRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expectSubscription\n                        \n                        \n                    \n                \n            \n            \n                \nexpectSubscription(query: string, variables?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/graphql-testing.controller.ts:63\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Expect that a subscription has been made which matches the given query, and return its mock.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variables\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphQlTestRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/graphql-testing.controller.ts:22\n                \n            \n\n\n            \n                \n                    Verify that no unmatched requests are outstanding.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTestingController } from '@angular/common/http/testing';\nimport { Injectable } from '@angular/core';\nimport { ExecutionResult } from 'graphql';\nimport { GraphQlTestRequest } from '../models';\nimport { SubscriptionTestingClient } from './subscription-testing';\n\n/**\n * Controller to be injected into tests, that allows for mocking and flushing of requests.\n */\n@Injectable()\nexport class GraphQlTestingController {\n   /**\n    * Creates an instance of GraphQlTestingController.\n    * @param {HttpTestingController} httpTesting\n    * @param {SubscriptionTestingClient} subscriptionTesting\n    */\n   constructor(private httpTesting: HttpTestingController, private subscriptionTesting: SubscriptionTestingClient) {}\n\n   /**\n    * Verify that no unmatched requests are outstanding.\n    */\n   verify() {\n      this.httpTesting.verify();\n   }\n\n   /**\n    * Expect that a request has been made which matches the given query, and return its mock.\n    * @template T\n    * @param {string} query\n    * @param {Object} [variables]\n    * @returns {GraphQlTestRequest}\n    */\n   expectQuery(query: string, variables?: Object): GraphQlTestRequest {\n      const httpRequest = this.httpTesting.expectOne((req) => {\n         let match = true;\n\n         match = match && req.url.includes('graphql');\n\n         match = match && req.headers.has('Accept');\n         match = match && req.headers.get('Accept') === 'application/json';\n\n         match = match && req.params.has('query');\n         match = match && req.params.get('query') === query;\n\n         match = match && req.params.has('variables');\n         match = match && req.params.get('variables') === JSON.stringify(variables || {});\n\n         return match;\n      });\n\n      return {\n         flush: (body: ExecutionResult) => httpRequest.flush(body),\n      };\n   }\n\n   /**\n    * Expect that a subscription has been made which matches the given query, and return its mock.\n    * @template T\n    * @param {string} query\n    * @param {Object} [variables]\n    * @returns {GraphQlTestRequest}\n    */\n   expectSubscription(query: string, variables?: Object): GraphQlTestRequest {\n      return {\n         flush: (body: ExecutionResult) => {\n            this.subscriptionTesting.flush({ query, variables }, body);\n         },\n         error: (error: Error) => {\n            this.subscriptionTesting.error({ query, variables }, error);\n         },\n         complete: () => {\n            this.subscriptionTesting.complete({ query, variables });\n         },\n      };\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQlTestingModule.html":{"url":"modules/GraphQlTestingModule.html","title":"module - GraphQlTestingModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQlTestingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQlTestingModule\n\n\n\ncluster_GraphQlTestingModule_imports\n\n\n\ncluster_GraphQlTestingModule_providers\n\n\n\n\nGraphQlModule\n\nGraphQlModule\n\n\n\nGraphQlTestingModule\n\nGraphQlTestingModule\n\nGraphQlTestingModule -->\n\nGraphQlModule->GraphQlTestingModule\n\n\n\n\n\nGraphQlTestingController\n\nGraphQlTestingController\n\nGraphQlTestingModule -->\n\nGraphQlTestingController->GraphQlTestingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/graphql/testing/graphql-testing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Testing module for GraphQl.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphQlTestingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GraphQlModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { NgModule } from '@angular/core';\nimport { TransferState } from '@angular/platform-browser';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { GraphQlModule } from '../graphql.module';\nimport { GraphQlTestingController, SubscriptionTestingClient, TransferStateMock } from './providers';\n\n/**\n * Testing module for GraphQl.\n */\n@NgModule({\n   imports: [HttpClientTestingModule, GraphQlModule.forRoot({ uri: '/graphql', origin: 'http://some_server' })],\n   providers: [\n      GraphQlTestingController,\n      { provide: SubscriptionTestingClient, useFactory: () => new SubscriptionTestingClient() },\n      { provide: SubscriptionClient, useExisting: SubscriptionTestingClient },\n      { provide: TransferState, useClass: TransferStateMock },\n   ],\n})\nexport class GraphQlTestingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of HomeComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Home component.\n */\n@Component({\n   selector: 'app-home',\n   templateUrl: './home.component.html',\n   styleUrls: ['home.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomeComponent {\n   /**\n    * Creates an instance of HomeComponent.\n    */\n   constructor() {}\n}\n\n    \n\n    \n        \n   \n\n\n    \n\n    \n                \n                    home.component.scss\n                \n                a {\n   color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   '\n    var COMPONENTS = [{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ShellComponent', 'selector': 'app-shell'},{'name': 'ShellLoadingComponent', 'selector': 'app-shell-loading'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n   declarations: [HomeComponent],\n   imports: [CommonModule, HomeRoutingModule]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n   {\n      path: '',\n      component: HomeComponent\n   }\n];\n\n@NgModule({\n   imports: [RouterModule.forChild(routes)],\n   exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shell/shell.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as app's shell.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shell\n            \n\n            \n                styleUrls\n                ./shell.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: any, angulartics: Angulartics2GoogleGlobalSiteTag)\n                    \n                \n                        \n                            \n                                Defined in src/app/shell/shell.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of ShellComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angulartics\n                                                  \n                                                        \n                                                                    Angulartics2GoogleGlobalSiteTag\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Portfolio'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shell/shell.component.ts:18\n                            \n                        \n\n                \n                    \n                        Title of the app\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Inject, PLATFORM_ID } from '@angular/core';\nimport { Angulartics2GoogleGlobalSiteTag } from 'angulartics2/gst';\n\n/**\n * Component used as app's shell.\n */\n@Component({\n   selector: 'app-shell',\n   templateUrl: './shell.component.html',\n   styleUrls: ['./shell.component.scss'],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShellComponent {\n   /**\n    * Title of the app\n    */\n   title = 'Portfolio';\n\n   /**\n    * Creates an instance of ShellComponent.\n    */\n   constructor(@Inject(PLATFORM_ID) private platform: any, private angulartics: Angulartics2GoogleGlobalSiteTag) {\n      if (isPlatformBrowser(platform)) {\n         angulartics.startTracking();\n      }\n   }\n}\n\n    \n\n    \n        \n   \n      Portfolio\n   \n\n   \n      Users\n   \n\n\n\n\n    \n\n    \n                \n                    ./shell.component.scss\n                \n                @import 'palette';\n@import 'animation';\n\n:host {\n   display: block;\n   padding: 1rem;\n   padding-top: calc(2rem + 2em);\n}\n\na {\n   text-decoration: none;\n}\n\na,\na:visited,\na:hover,\na:active {\n   color: inherit;\n}\n\n.nav {\n   @include theme(dark);\n\n   position: fixed;\n   display: flex;\n   align-items: center;\n   top: 0;\n   left: 0;\n   right: 0;\n   padding: 1rem;\n}\n\n.nav__header {\n   display: block;\n   flex: 1 0 auto;\n   margin: 0.25rem 0;\n   font-size: 2em;\n\n   & a {\n      transition: transition(all);\n\n      &:hover,\n      &:focus {\n         color: get-color(white);\n      }\n   }\n}\n\n.nav__links {\n   display: block;\n   flex: 0 1 auto;\n   margin: 0;\n   padding: 0;\n   list-style-type: none;\n}\n\n.nav--link {\n   display: inline-block;\n   padding: 0.25rem 0.5rem;\n   border-radius: 0.25rem;\n   font-size: 1.6em;\n   font-weight: 300;\n   transition: transition(all);\n\n   &:hover,\n   &:focus {\n      color: get-color(white);\n   }\n\n   &.nav__link--active {\n      background-color: get-color(white, $opacity: 0.2);\n      box-shadow: 2px 2px 10px get-color(black, $opacity: 0.2);\n   }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         Portfolio            Users   '\n    var COMPONENTS = [{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ShellComponent', 'selector': 'app-shell'},{'name': 'ShellLoadingComponent', 'selector': 'app-shell-loading'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellLoadingComponent.html":{"url":"components/ShellLoadingComponent.html","title":"component - ShellLoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShellLoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shell/shell-loading/shell-loading.component.ts\n\n\n    \n        Description\n    \n    \n        Loading indicator for app's shell.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shell-loading\n            \n\n\n\n\n            \n                templateUrl\n                ./shell-loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shell/shell-loading/shell-loading.component.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of ShellLoadingComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * Loading indicator for app's shell.\n */\n@Component({\n   selector: 'app-shell-loading',\n   templateUrl: './shell-loading.component.html',\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShellLoadingComponent {\n   /**\n    * Creates an instance of ShellLoadingComponent.\n    */\n   constructor() {}\n}\n\n    \n\n    \n        \n   \n      \n   \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ShellComponent', 'selector': 'app-shell'},{'name': 'ShellLoadingComponent', 'selector': 'app-shell-loading'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShellLoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShellModule.html":{"url":"modules/ShellModule.html","title":"module - ShellModule","body":"\n                   \n\n\n\n\n    Modules\n    ShellModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShellModule\n\n\n\ncluster_ShellModule_declarations\n\n\n\ncluster_ShellModule_exports\n\n\n\n\nShellComponent\n\nShellComponent\n\n\n\nShellModule\n\nShellModule\n\nShellModule -->\n\nShellComponent->ShellModule\n\n\n\n\n\nShellLoadingComponent\n\nShellLoadingComponent\n\nShellModule -->\n\nShellLoadingComponent->ShellModule\n\n\n\n\n\nShellComponent \n\nShellComponent \n\nShellComponent  -->\n\nShellModule->ShellComponent \n\n\n\n\n\nShellLoadingComponent \n\nShellLoadingComponent \n\nShellLoadingComponent  -->\n\nShellModule->ShellLoadingComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shell/shell.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShellComponent\n                        \n                        \n                            ShellLoadingComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShellComponent\n                        \n                        \n                            ShellLoadingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ShellLoadingComponent } from './shell-loading/shell-loading.component';\nimport { ShellComponent } from './shell.component';\n\n@NgModule({\n   declarations: [ShellComponent, ShellLoadingComponent],\n   imports: [CommonModule, RouterModule],\n   exports: [ShellComponent, ShellLoadingComponent],\n   providers: []\n})\nexport class ShellModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscriptionTestingClient.html":{"url":"classes/SubscriptionTestingClient.html","title":"class - SubscriptionTestingClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscriptionTestingClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/testing/providers/subscription-testing.ts\n        \n\n            \n                Description\n            \n            \n                Mock of SubscriptionClient to be used in tests. Direct use is not needed, use GraphQlTestingController instead.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertRequest\n                            \n                            \n                                complete\n                            \n                            \n                                error\n                            \n                            \n                                flush\n                            \n                            \n                                    Private\n                                generateRequest\n                            \n                            \n                                    Private\n                                getKey\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:14\n                            \n                        \n\n                \n                    \n                        Collection of requests indexed by query and params.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertRequest(key: string, query: string | DocumentNode)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:40\n                \n            \n\n\n            \n                \n                    Asserts that a request is expected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            string | DocumentNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \ncomplete(options: OperationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:83\n                \n            \n\n\n            \n                \n                    Completes an outstanding request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            OperationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(options: OperationOptions, error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:73\n                \n            \n\n\n            \n                \n                    Resolves a request by returning an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            OperationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \nflush(options: OperationOptions, body: ExecutionResult)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:62\n                \n            \n\n\n            \n                \n                    Resolves a request by returning a body.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            OperationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                            ExecutionResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRequest(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:29\n                \n            \n\n\n            \n                \n                    Generates the request mock.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKey(undefined: OperationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:21\n                \n            \n\n\n            \n                \n                    Gets the key of the request collection given a query and params.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            OperationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            request\n                        \n                        \n                    \n                \n            \n            \n                \nrequest(options: OperationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/subscription-testing.ts:51\n                \n            \n\n\n            \n                \n                    Returns the stream of a request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            OperationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentNode, ExecutionResult } from 'graphql';\nimport { Observable, Subject } from 'rxjs';\nimport { OperationOptions, SubscriptionClient } from 'subscriptions-transport-ws';\n\n/**\n * Mock of SubscriptionClient to be used in tests. Direct use is not needed, use GraphQlTestingController instead.\n * @implements {Partial}\n */\nexport class SubscriptionTestingClient implements Partial {\n   /**\n    * Collection of requests indexed by query and params.\n    * @type {{ [query: string]: Subject> }}\n    */\n   private requests: { [query: string]: Subject> } = {};\n\n   /**\n    * Gets the key of the request collection given a query and params.\n    * @param {OperationOptions} { query, variables }\n    * @returns {string}\n    */\n   private getKey({ query, variables }: OperationOptions): string {\n      return query + '|' + JSON.stringify(variables || {});\n   }\n\n   /**\n    * Generates the request mock.\n    * @param {string} key\n    */\n   private generateRequest(key: string) {\n      if (!this.requests[key]) {\n         this.requests[key] = new Subject>();\n      }\n   }\n\n   /**\n    * Asserts that a request is expected.\n    * @param {string} key\n    * @param {string} query\n    */\n   private assertRequest(key: string, query: string | DocumentNode) {\n      if (!this.requests[key]) {\n         throw new Error(`Query ${query} was not expected.`);\n      }\n   }\n\n   /**\n    * Returns the stream of a request.\n    * @param {OperationOptions} options\n    * @returns {Observable>}\n    */\n   request(options: OperationOptions): Observable> {\n      const key: string = this.getKey(options);\n      this.generateRequest(key);\n      return this.requests[key].asObservable();\n   }\n\n   /**\n    * Resolves a request by returning a body.\n    * @param {OperationOptions} options\n    * @param {ExecutionResult} body\n    */\n   flush(options: OperationOptions, body: ExecutionResult) {\n      const key: string = this.getKey(options);\n      this.assertRequest(key, options.query);\n      this.requests[key].next(body);\n   }\n\n   /**\n    * Resolves a request by returning an error.\n    * @param {OperationOptions} options\n    * @param {Error} error\n    */\n   error(options: OperationOptions, error: Error) {\n      const key: string = this.getKey(options);\n      this.assertRequest(key, options.query);\n      this.requests[key].error(error);\n   }\n\n   /**\n    * Completes an outstanding request.\n    * @param {OperationOptions} options\n    */\n   complete(options: OperationOptions) {\n      const key: string = this.getKey(options);\n      this.assertRequest(key, options.query);\n      this.requests[key].complete();\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferStateMock.html":{"url":"classes/TransferStateMock.html","title":"class - TransferStateMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferStateMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/graphql/testing/providers/transfer-state.ts\n        \n\n            \n                Description\n            \n            \n                Mock class for TransferState to be used in unit tests.\n\n            \n\n            \n                Extends\n            \n            \n                        TransferState\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                hasKey\n                            \n                            \n                                onSerialize\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:12\n                            \n                        \n\n                \n                    \n                        Data store.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: StateKey, defaultValue: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Get a value from the data store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            StateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasKey\n                        \n                        \n                    \n                \n            \n            \n                \nhasKey(key: StateKey)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:50\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Checks if a key is present in the data store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            StateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSerialize\n                        \n                        \n                    \n                \n            \n            \n                \nonSerialize(key: StateKey, callback: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Noop mock for onSerialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            StateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(key: StateKey)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Removes a value from the data store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            StateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(key: StateKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sets a value in the data store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            StateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/graphql/testing/providers/transfer-state.ts:67\n                \n            \n\n\n            \n                \n                    Noop mock for toJson.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { StateKey, TransferState } from '@angular/platform-browser';\n\n/**\n * Mock class for TransferState to be used in unit tests.\n * @extends {TransferState}\n */\nexport class TransferStateMock extends TransferState {\n   /**\n    * Data store.\n    * @type {{ [key: string]: any }}\n    */\n   private data: { [key: string]: any } = {};\n\n   /**\n    * Get a value from the data store.\n    * @template T\n    * @param {StateKey} key\n    * @param {T} defaultValue\n    * @returns {T}\n    */\n   get(key: StateKey, defaultValue: T): T {\n      return this.data[key] || defaultValue;\n   }\n\n   /**\n    * Sets a value in the data store.\n    * @template T\n    * @param {StateKey} key\n    * @param {T} value\n    */\n   set(key: StateKey, value: T): void {\n      this.data[key] = value;\n   }\n\n   /**\n    * Removes a value from the data store.\n    * @template T\n    * @param {StateKey} key\n    */\n   remove(key: StateKey): void {\n      delete this.data[key];\n   }\n\n   /**\n    * Checks if a key is present in the data store.\n    * @template T\n    * @param {StateKey} key\n    * @returns {boolean}\n    */\n   hasKey(key: StateKey): boolean {\n      return !!this.data[key];\n   }\n\n   /**\n    * Noop mock for onSerialize.\n    * @template T\n    * @param {StateKey} key\n    * @param {() => T} callback\n    */\n   onSerialize(key: StateKey, callback: () => T): void {}\n\n   /**\n    * Noop mock for toJson.\n    * @returns {string}\n    * @memberof TransferStateMock\n    */\n   toJson(): string {\n      return '';\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Model for a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n   /**\n    * User's ID.\n    * @type {string}\n    */\n   id: string;\n\n   /**\n    * User's email.\n    * @type {string}\n    */\n   email: string;\n\n   /**\n    * User's name.\n    * @type {string}\n    */\n   name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/components/user-list/user-list.component.ts\n\n\n    \n        Description\n    \n    \n        User's list presentational component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n\n\n            \n                template\n                Users\n\n   {{ user.name }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/users/components/user-list/user-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserListComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/users/components/user-list/user-list.component.ts:22\n                            \n                        \n                \n                    \n                        List of users.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { User } from '../../models';\n\n/**\n * User's list presentational component.\n */\n@Component({\n   selector: 'app-user-list',\n   template: `\n      Users\n      \n         {{ user.name }}\n      \n   `,\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserListComponent {\n   /**\n    * List of users.\n    * @type {User[]}\n    */\n   @Input() users: User[];\n\n   /**\n    * Creates an instance of UserListComponent.\n    */\n   constructor() {}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Users   {{ user.name }}'\n    var COMPONENTS = [{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ShellComponent', 'selector': 'app-shell'},{'name': 'ShellLoadingComponent', 'selector': 'app-shell-loading'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        Users smart component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(graphQl: GraphQlService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of UsersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graphQl\n                                                  \n                                                        \n                                                                        GraphQlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:57\n                \n            \n\n\n            \n                \n                    On init life-cycle hook.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:46\n                            \n                        \n\n                \n                    \n                        Observable of users.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GraphQlEntity, GraphQlService } from '@lib/graphql';\nimport { Observable } from 'rxjs';\nimport { User } from './models';\n\n/**\n * GraphQL query to fetch all users.\n */\nexport const GET_ALL_USERS_QUERY = `\n   query {\n      users {\n         id\n         name\n         email\n      }\n   }\n`;\n\n/**\n * GraphQl subscription for new users.\n */\nexport const USER_ADDED_SUBSCRIPTION = `\n   subscription {\n      userAdded {\n         id\n         name\n         email\n      }\n   }\n`;\n\n/**\n * Users smart component.\n */\n@Component({\n   selector: 'app-users',\n   template: `\n      \n   `,\n})\nexport class UsersComponent implements OnInit {\n   /**\n    * Observable of users.\n    * @type {Observable}\n    */\n   users$: Observable;\n\n   /**\n    * Creates an instance of UsersComponent.\n    * @param {UsersQuery} users\n    */\n   constructor(private graphQl: GraphQlService) {}\n\n   /**\n    * On init life-cycle hook.\n    */\n   ngOnInit(): void {\n      const userEntity: GraphQlEntity = {\n         loadAllQuery: GET_ALL_USERS_QUERY,\n         loadAllMap: (response) => response.data.users,\n         onAddedQuery: USER_ADDED_SUBSCRIPTION,\n         onAddedMap: (response) => response.data.userAdded,\n      };\n\n      this.users$ = this.graphQl.entity(userEntity);\n   }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ShellComponent', 'selector': 'app-shell'},{'name': 'ShellLoadingComponent', 'selector': 'app-shell-loading'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nUserListComponent\n\nUserListComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUserListComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserListComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\n\n@NgModule({\n   declarations: [UsersComponent, UserListComponent],\n   imports: [CommonModule, UsersRoutingModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersRoutingModule.html":{"url":"modules/UsersRoutingModule.html","title":"module - UsersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n   {\n      path: '',\n      component: UsersComponent,\n   },\n];\n\n@NgModule({\n   imports: [RouterModule.forChild(routes)],\n   exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shell/shell-loading/shell-loading.component.ts\n            \n            component\n            ShellLoadingComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shell/shell.component.ts\n            \n            component\n            ShellComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/users/components/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/users/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            variable\n            GET_ALL_USERS_QUERY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            variable\n            USER_ADDED_SUBSCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/graphql/models/config.interface.ts\n            \n            interface\n            GraphQlConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/graphql/models/entity.interface.ts\n            \n            interface\n            GraphQlEntity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/graphql/providers/config.provider.ts\n            \n            variable\n            GRAPHQL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/graphql/providers/config.provider.ts\n            \n            variable\n            SERVER_GRAPHQL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/graphql/providers/graphql.service.ts\n            \n            injectable\n            GraphQlService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/graphql/providers/subscription.factory.ts\n            \n            function\n            SubscriptionFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/graphql/testing/models/graphql-test-request.interface.ts\n            \n            interface\n            GraphQlTestRequest\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/graphql/testing/providers/graphql-testing.controller.ts\n            \n            injectable\n            GraphQlTestingController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/graphql/testing/providers/subscription-testing.ts\n            \n            class\n            SubscriptionTestingClient\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/lib/graphql/testing/providers/transfer-state.ts\n            \n            class\n            TransferStateMock\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.4\n        \n            @angular/common : ^7.2.4\n        \n            @angular/compiler : ^7.2.4\n        \n            @angular/core : ^7.2.4\n        \n            @angular/forms : ^7.2.4\n        \n            @angular/http : ^7.2.4\n        \n            @angular/platform-browser : ^7.2.4\n        \n            @angular/platform-browser-dynamic : ^7.2.4\n        \n            @angular/platform-server : ^7.2.4\n        \n            @angular/pwa : ^0.13.1\n        \n            @angular/router : ^7.2.4\n        \n            @angular/service-worker : ^7.2.4\n        \n            @nguniversal/common : ^7.0.2\n        \n            @nguniversal/express-engine : ^7.0.2\n        \n            @nguniversal/module-map-ngfactory-loader : ^7.0.2\n        \n            angulartics2 : ^7.4.0\n        \n            apollo-server-express : ^2.4.8\n        \n            chalk : ^2.4.2\n        \n            cheerio : ^1.0.0-rc.2\n        \n            compression : ^1.7.3\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : ^2.6.2\n        \n            cors : ^2.8.5\n        \n            dotenv : ^7.0.0\n        \n            express : ^4.16.3\n        \n            graphql : ^14.0.2\n        \n            helmet : ^3.16.0\n        \n            heroku-ssl-redirect : ^0.0.4\n        \n            is-heroku : ^2.0.0\n        \n            memory-cache : ^0.2.0\n        \n            mongodb : ^3.1.10\n        \n            mongoose : ^5.4.19\n        \n            morgan : ^1.9.1\n        \n            normalize.css : ^8.0.1\n        \n            path-to-regexp : ^3.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            request : ^2.88.0\n        \n            rxjs : ^6.4.0\n        \n            serve-favicon : ^2.5.0\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SubscriptionFactory   (src/.../subscription.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/graphql/providers/subscription.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            SubscriptionFactory\n                        \n                        \n                    \n                \n            \n            \n                \nSubscriptionFactory(config, platform: any)\n                \n            \n\n\n\n\n            \n                \n                    Subscription factory. Return an injectable of SubscriptionClient in the browser, nothing in the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SubscriptionClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolio\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck project's Wiki to see how this project has been built.\nDevelopment\nRun the client:\nshell\nnpm run start\nCompile the server in watch mode:\nshell\nnpm run build:server:watch\nRun the server in watch mode:\nshell\nnpm run server:watch\nAdministration links\n\nGoogle Analytics\nGoogle Tag Manager\nGoogle Search Console\nApollo Engine\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Samuel Fernández\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQlModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQlTestingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShellModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_GraphQlTestingModule\n\n\n\ncluster_GraphQlTestingModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_ShellModule\n\n\n\ncluster_ShellModule_declarations\n\n\n\ncluster_ShellModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQlModule\n\nGraphQlModule\n\nAppModule -->\n\nGraphQlModule->AppModule\n\n\n\n\n\nGraphQlTestingModule\n\nGraphQlTestingModule\n\nGraphQlTestingModule -->\n\nGraphQlModule->GraphQlTestingModule\n\n\n\n\n\nShellModule\n\nShellModule\n\nAppModule -->\n\nShellModule->AppModule\n\n\n\n\n\nShellComponent \n\nShellComponent \n\nShellComponent  -->\n\nShellModule->ShellComponent \n\n\n\n\n\nShellLoadingComponent \n\nShellLoadingComponent \n\nShellLoadingComponent  -->\n\nShellModule->ShellLoadingComponent \n\n\n\n\n\nShellModule \n\nShellModule \n\nShellModule  -->\n\nAppModule->ShellModule \n\n\n\nShellComponent  -->\n\nAppModule->ShellComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\nShellComponent  -->\n\nAppServerModule->ShellComponent \n\n\n\n\n\nGraphQlTestingController\n\nGraphQlTestingController\n\nGraphQlTestingModule -->\n\nGraphQlTestingController->GraphQlTestingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nShellComponent\n\nShellComponent\n\nShellModule -->\n\nShellComponent->ShellModule\n\n\n\n\n\nShellLoadingComponent\n\nShellLoadingComponent\n\nShellModule -->\n\nShellLoadingComponent->ShellModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUserListComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GET_ALL_USERS_QUERY   (src/.../users.component.ts)\n                        \n                        \n                            GRAPHQL_CONFIG   (src/.../config.provider.ts)\n                        \n                        \n                            SERVER_GRAPHQL_CONFIG   (src/.../config.provider.ts)\n                        \n                        \n                            USER_ADDED_SUBSCRIPTION   (src/.../users.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/users/users.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GET_ALL_USERS_QUERY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n   query {\n      users {\n         id\n         name\n         email\n      }\n   }\n`\n                        \n                    \n\n                \n                    \n                        GraphQL query to fetch all users.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_ADDED_SUBSCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n   subscription {\n      userAdded {\n         id\n         name\n         email\n      }\n   }\n`\n                        \n                    \n\n                \n                    \n                        GraphQl subscription for new users.\n\n                    \n                \n\n            \n        \n\n    src/lib/graphql/providers/config.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GRAPHQL_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GRAPHQL_CONFIG'\n                        \n                    \n\n                \n                    \n                        GraphQl configuration injection token.\nTODO: Use \"new InjectionToken('GRAPHQL_CONFIG')\" when this is a standalone library.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SERVER_GRAPHQL_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SERVER_GRAPHQL_CONFIG'\n                        \n                    \n\n                \n                    \n                        GraphQl configuration injection token for server.\nTODO: Use \"new InjectionToken>('SERVER_GRAPHQL_CONFIG')\" when this is a standalone library.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
